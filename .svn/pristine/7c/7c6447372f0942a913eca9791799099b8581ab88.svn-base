package com.hd.common.util.mail;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;

import com.hd.common.util.StringUtil;

public class SendMail {
	
	
//	private String host = "smtp.exmail.qq.com"; // smtp服务器
//	 private String user = "system@bfuture.com.cn"; // 用户名
//	 private String pwd = "idw30;rkdo"; // 密码
	 private String from = ""; // 发件人地址
	 private String to = ""; // 收件人地址 
	 private String cto="";//抄送地址
	 private String subject = ""; // 邮件标题
 


 public void setAddress(String from, String to,String cto, String subject){
	
  this.from = from;
  this.to = to;
  this.cto =cto;
  this.subject = subject;
  
 }

 public int send(String txt) throws IOException {
	 
	 InputStream in = this.getClass().getClassLoader().getResourceAsStream("messages.properties");
  Properties props = new Properties();
  props.load(in);
  String host =props.getProperty("mail.smtp.host");
  String user =props.getProperty("mail.smtp.user");
  String pwd =props.getProperty("mail.smtp.password");
  // 设置发送邮件的邮件服务器的属性（这里使用网易的smtp服务器）
  props.put("mail.smtp.host", host);
  // 需要经过授权，也就是有户名和密码的校验，这样才能通过验证（一定要有这一条）
  props.put("mail.smtp.auth", "true");
  props.put("mail.smtp.connectiontimeout", "10000"); // 
  props.put("mail.smtp.timeout", "10000");   
  // 用刚刚设置好的props对象构建一个session
  Session session = Session.getDefaultInstance(props);
  // 有了这句便可以在发送邮件的过程中在console处显示过程信息，供调试使
  // 用（你可以在控制台（console)上看到发送邮件的过程）
  session.setDebug(true);
  // 用session为参数定义消息对象
  MimeMessage message = new MimeMessage(session);
  try {
   // 加载发件人地址
   message.setFrom(new InternetAddress(from));
   // 加载收件人地址
   message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
   System.out.println(cto+"-------------------------");
  if (StringUtil.isNotEmpty(cto)) {
	  message.addRecipient(Message.RecipientType.CC, new InternetAddress(cto));
}
  
 
  
   // 加载标题
   message.setSubject(subject);
   message.setContent(txt, "text/html ;charset=gbk");
 
   // 向multipart对象中添加邮件的各个部分内容，包括文本内容和附件
//   Multipart multipart = new MimeMultipart();
//
//   // 设置邮件的文本内容
//   BodyPart contentPart = new MimeBodyPart();
//   contentPart.setText(txt);
//   multipart.addBodyPart(contentPart);
   
   // 添加附件
   BodyPart messageBodyPart = new MimeBodyPart();
   //DataSource source = new FileDataSource(affix);
   // 添加附件的内容
   //messageBodyPart.setDataHandler(new DataHandler(source));
   // 添加附件的标题
   // 这里很重要，通过下面的Base64编码的转换可以保证你的中文附件标题名在发送时不会变成乱码
   //sun.misc.BASE64Encoder enc = new sun.misc.BASE64Encoder();
   //messageBodyPart.setFileName("=?GBK?B?"+ enc.encode(affixName.getBytes()) + "?=");
   //multipart.addBodyPart(messageBodyPart);
  
//   DataSource source =
//     new FileDataSource(fileAttachment);
//   messageBodyPart.setDataHandler(
//     new DataHandler(source));
//   messageBodyPart.setFileName(fileAttachment);
//   sun.misc.BASE64Encoder enc = new sun.misc.BASE64Encoder();
//   messageBodyPart.setFileName("=?GBK?B?"+ enc.encode(fileAttachment.getBytes()) + "?=");
//   multipart.addBodyPart(messageBodyPart);
//   // 将multipart对象放到message中
//   message.setContent(multipart);
   // 保存邮件
   message.saveChanges();
   // 发送邮件
   Transport transport = session.getTransport("smtp");
   // 连接服务器的邮箱
   transport.connect(host, user, pwd);
   // 把邮件发送出去
   transport.sendMessage(message, message.getAllRecipients());
   transport.close();
  } catch (Exception e) {
   e.printStackTrace();
   return 404;
  }
return 100;
 }

 
}
