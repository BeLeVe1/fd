package com.hd.microblog.web.controller.admin;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hd.microblog.model.dt_analysis;
import com.hd.microblog.service.dt_adminService;
import com.hd.microblog.service.dt_analysisService;
import com.hd.microblog.service.dt_predictionService;
import com.hd.microblog.util.createxls;




@Controller
public class AdminanalysisController {
	 
	@Autowired
	@Qualifier("dt_analysisService")
	private dt_analysisService dt_analysisservice;
	
	//预测分析表
	@RequestMapping("/adminanalysislist")
	public String adminanalysislist(HttpServletRequest request, HttpServletResponse resp) 
			throws IOException {
		return "admin/analysislist";
	}
	//预测分析表
	@RequestMapping(value = "/adminanalysislistajax", method = { RequestMethod.POST }, produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminanalysislistajax(HttpServletRequest request, Model model, String page, String rows ,Integer draw, 
			String zbcode,String qccode,String qcname,String fg,String sort) throws IOException {
		
		Integer start = Integer.valueOf(request.getParameter("start"));
	    String length = request.getParameter("length");
		int number = Integer.valueOf(length);
		List items = dt_analysisservice.adminfindanalysislist(zbcode,qccode,qcname,fg,sort,start,number);
		List count = dt_analysisservice.adminfindanalysislistcount(zbcode,qccode,qcname,fg);
		int countnumber = 0;
		if (count != null && count.size() != 0) {
			Map map = (Map) count.get(0);
			countnumber = Integer.valueOf(String.valueOf(map.get("count")));
		}
		List returnlist  = new ArrayList();
		for(int i=0;i<items.size();i++){
			Map map = (Map)items.get(i);
			
			returnlist.add(map);
		}
		
		JSONObject jobj = new JSONObject();
		
		jobj.accumulate("draw", draw);
		jobj.accumulate("recordsFiltered", countnumber);
		jobj.accumulate("recordsTotal", countnumber);
		jobj.accumulate("data", returnlist);
		return jobj.toString();
	}
	//Excel生成
	@RequestMapping(value = "/adminanalysisExcel",produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminanalysisExcel(HttpServletRequest request,HttpServletResponse resp) throws IOException {
		HttpSession session = request.getSession();
		resp.setHeader("Access-Control-Allow-Origin", "*");
		resp.setHeader("Access-Control-Allow-Methods", "GET,POST");
		JSONObject json = new JSONObject();
		try{
			//生成xls表头
			List<String> header = new ArrayList<String>(); // 第一行数据
			List<List<String>> body = new ArrayList<List<String>>();
			header.add("装备代码");
		    header.add("器材代码");
		    header.add("器材名称");
		    header.add("规格件号");
		    header.add("单位");
		    header.add("单价");
		    header.add("单装用数");
		    header.add("分工");
		    header.add("长度");
		    header.add("宽度");
		    header.add("高度");
		    header.add("重量");
		    header.add("年份1");
		    header.add("年份2");
		    header.add("年份3");
		    header.add("年份4");
		    header.add("年份5");
		    header.add("年份6");
		    header.add("年份7");
		    header.add("年份8");
		    header.add("年份9");
		    header.add("年份10");
		    header.add("预测方法");
		    header.add("预测值");
		    header.add("标准差");
		    
		    List<String> data1 = new ArrayList<String>();
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
	    	body.add(data1);
		    
		    
		    List items = dt_analysisservice.adminfindanalysislist();
			for(int i=0;i<items.size();i++){
				Map map = (Map)items.get(i);
				//添加xls信息
				List<String> data = new ArrayList<String>();
				data.add(String.valueOf(map.get("zbcode")));
				data.add(String.valueOf(map.get("qccode")));
				data.add(String.valueOf(map.get("qcname")));
				data.add(String.valueOf(map.get("ggjh")));
				data.add(String.valueOf(map.get("unit")));
				data.add(String.valueOf(map.get("unitprice")));
				data.add(String.valueOf(map.get("dzys")));
				data.add(String.valueOf(map.get("fg")));
				data.add(String.valueOf(map.get("length")));
				data.add(String.valueOf(map.get("width")));
				data.add(String.valueOf(map.get("height")));
				data.add(String.valueOf(map.get("weight")));
				data.add(String.valueOf(map.get("age1")));
				data.add(String.valueOf(map.get("age2")));
				data.add(String.valueOf(map.get("age3")));
				data.add(String.valueOf(map.get("age4")));
				data.add(String.valueOf(map.get("age5")));
				data.add(String.valueOf(map.get("age6")));
				data.add(String.valueOf(map.get("age7")));
				data.add(String.valueOf(map.get("age8")));
				data.add(String.valueOf(map.get("age9")));
				data.add(String.valueOf(map.get("age10")));
				data.add(String.valueOf(map.get("ycff")));
				data.add(String.valueOf(map.get("ycz")));
				data.add(String.valueOf(map.get("bzc")));
		    	body.add(data);
		    	
			}
			//xls输出
			String loadpath = request.getSession().getServletContext().getRealPath("/") + "..//upload" + File.separator;
		    //新建文件路径
		    File file2 = new File(loadpath);
			if (!file2.exists()) {
				file2.mkdir();
			}
			try(OutputStream out = new FileOutputStream(loadpath+"/"+"预测分析.xls")){
				createxls.generateExcel("Sheet1", header, body, out);
			} catch (Exception e) {
				e.printStackTrace();
			}
			json.put("code", "100");
			json.put("info", "生成成功");
		}catch(Exception e){
			e.printStackTrace();
			json.put("code", "400");
			json.put("info", "系统错误");
		}
		return json.toString();
	}	
//	//测试
//	@RequestMapping(value = "/test11", produces = "application/json; charset=utf-8")
//	@ResponseBody
//	public String test11(HttpServletRequest request, HttpServletResponse resp) throws IOException {
//		HttpSession session = request.getSession();
//		resp.setHeader("Access-Control-Allow-Origin", "*");
//		resp.setHeader("Access-Control-Allow-Methods", "GET,POST");
//		JSONObject json = new JSONObject();
//		try {
//			for(int i=1;i<=200;i++) {
//				dt_analysis analysis = dt_analysisservice.get(i);
//				if(analysis!=null) {
//					analysis.setDataprocess_id(analysis.getAnalysis_id());
//					dt_analysisservice.saveOrUpdate(analysis);
//				}
//			}
//			json.put("code", "100");
//			json.put("rinfo", "查询成功");
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//			json.put("code", "400");
//			json.put("rinfo", "系统错误");
//		}
//		return json.toString();
//	}
}






