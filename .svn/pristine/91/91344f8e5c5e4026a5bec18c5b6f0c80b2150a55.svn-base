package com.hd.microblog.web.controller.admin;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hd.microblog.model.dt_analysis;
import com.hd.microblog.model.dt_dataprocess;
import com.hd.microblog.model.dt_sharedpart;
import com.hd.microblog.service.dt_adminService;
import com.hd.microblog.service.dt_analysisService;
import com.hd.microblog.service.dt_dataprocessService;
import com.hd.microblog.service.dt_sharedpartService;
import com.hd.microblog.util.createxls;




@Controller
public class AdminsharedpartController {
	 
	@Autowired
	@Qualifier("dt_adminService")
	private dt_adminService dt_adminservice;
	@Autowired
	@Qualifier("dt_sharedpartService")
	private dt_sharedpartService dt_sharedpartservice;
	@Autowired
	@Qualifier("dt_analysisService")
	private dt_analysisService dt_analysisservice;
	
	//共用件优化表
	@RequestMapping("/adminsharedpartlist")
	public String adminsharedpartlist(HttpServletRequest request, HttpServletResponse resp) 
			throws IOException {
		return "admin/sharedpartlist";
	}
	//共用件优化表
	@RequestMapping(value = "/adminsharedpartlistajax", method = { RequestMethod.POST }, produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminsharedpartlistajax(HttpServletRequest request, Model model, String page, String rows ,Integer draw, 
			String zbcode,String zbzyd,String qccode,String qcname,String fg,String sort) throws IOException {
		
		Integer start = Integer.valueOf(request.getParameter("start"));  
	    String length = request.getParameter("length");  
		int number = Integer.valueOf(length);
		List items = dt_sharedpartservice.adminfindsharedpartlist(zbcode,zbzyd,qccode,qcname,fg,sort,start,number);
		List count = dt_sharedpartservice.adminfindsharedpartlistcount(zbcode,zbzyd,qccode,qcname,fg);
		int countnumber = 0;
		if (count != null && count.size() != 0) {
			Map map = (Map) count.get(0);
			countnumber = Integer.valueOf(String.valueOf(map.get("count")));
		}
		List returnlist  = new ArrayList();
		for(int i=0;i<items.size();i++){
			Map map = (Map)items.get(i);
			
			returnlist.add(map);
		}
		
		JSONObject jobj = new JSONObject();
		
		jobj.accumulate("draw", draw);
		jobj.accumulate("recordsFiltered", countnumber);
		jobj.accumulate("recordsTotal", countnumber);
		jobj.accumulate("data", returnlist);
		return jobj.toString();
	}
	//Excel生成
	@RequestMapping(value = "/adminsharedpartExcel",produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminsharedpartExcel(HttpServletRequest request,HttpServletResponse resp) throws IOException {
		HttpSession session = request.getSession();
		resp.setHeader("Access-Control-Allow-Origin", "*");
		resp.setHeader("Access-Control-Allow-Methods", "GET,POST");
		JSONObject json = new JSONObject();
		try{
			//生成xls表头
			List<String> header = new ArrayList<String>(); // 第一行数据
			List<List<String>> body = new ArrayList<List<String>>();
			header.add("装备代码");
			header.add("装备重要度");
		    header.add("器材代码");
		    header.add("器材名称");
		    header.add("规格件号");
		    header.add("单位");
		    header.add("单价");
		    header.add("单装用数");
		    header.add("分工");
		    header.add("长度");
		    header.add("宽度");
		    header.add("高度");
		    header.add("重量");
		    header.add("预测所需数");
		    header.add("计划优化数");
		    
		    List<String> data1 = new ArrayList<String>();
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
			data1.add("");
	    	body.add(data1);
		    
		    
		    List items = dt_sharedpartservice.adminfindsharedpartlist();
			for(int i=0;i<items.size();i++){
				Map map = (Map)items.get(i);
				//添加xls信息
				List<String> data = new ArrayList<String>();
				data.add(String.valueOf(map.get("zbcode")));
				data.add(String.valueOf(map.get("zbzyd")));
				data.add(String.valueOf(map.get("qccode")));
				data.add(String.valueOf(map.get("qcname")));
				data.add(String.valueOf(map.get("ggjh")));
				data.add(String.valueOf(map.get("unit")));
				data.add(String.valueOf(map.get("unitprice")));
				data.add(String.valueOf(map.get("dzys")));
				data.add(String.valueOf(map.get("fg")));
				data.add(String.valueOf(map.get("length")));
				data.add(String.valueOf(map.get("width")));
				data.add(String.valueOf(map.get("height")));
				data.add(String.valueOf(map.get("weight")));
				data.add(String.valueOf(map.get("predictionnumber")));
				data.add(String.valueOf(map.get("plannumber")));
		    	body.add(data);
		    	
			}
			//xls输出
			String loadpath = request.getSession().getServletContext().getRealPath("/") + "..//upload" + File.separator;
		    //新建文件路径
		    File file2 = new File(loadpath);
			if (!file2.exists()) {
				file2.mkdir();
			}
			try(OutputStream out = new FileOutputStream(loadpath+"/"+"共用件优化.xls")){
				createxls.generateExcel("Sheet1", header, body, out);
			} catch (Exception e) {
				e.printStackTrace();
			}
			json.put("code", "100");
			json.put("info", "生成成功");
		}catch(Exception e){
			e.printStackTrace();
			json.put("code", "400");
			json.put("info", "系统错误");
		}
		return json.toString();
	}
	//统计
	@RequestMapping(value = "/adminsharedpartstatistics",produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminsharedpartstatistics(HttpServletRequest request,HttpServletResponse resp) throws IOException {
		HttpSession session = request.getSession();
		resp.setHeader("Access-Control-Allow-Origin", "*");
		resp.setHeader("Access-Control-Allow-Methods", "GET,POST");
		JSONObject json = new JSONObject();
		DecimalFormat df = new DecimalFormat("#");
		try{
			//参数不足，无法计算，临时拿0.95代替
			List list = dt_sharedpartservice.adminfindsharedpartlistall();
			for(int i=0;i<200;i++){//list.size()
				Map map = (Map)list.get(i);
				dt_sharedpart sharedpart = dt_sharedpartservice.get(Integer.valueOf(String.valueOf(map.get("sharedpart_id"))));
				
				List analysislist = dt_analysisservice.adminfindanalysislistfordataprocess_id(sharedpart.getDataprocess_id());
				double predictionnumber = 0;
				double fx = 0;
				if(analysislist.size()>0) {
					Map map2 = (Map)analysislist.get(0);
					predictionnumber = Double.valueOf(String.valueOf(map2.get("ycz1")));
					fx = Double.valueOf(String.valueOf(map2.get("bzc1")));
				}
				
				sharedpart.setPredictionnumber(Integer.valueOf(df.format(predictionnumber)));
				sharedpart.setPlannumber(Integer.valueOf(df.format(predictionnumber+fx*0.5)));
				dt_sharedpartservice.saveOrUpdate(sharedpart);
			}
			
			
			
//			List list = dt_analysisservice.adminfindanalysislistall();
//			for(int i=0;i<200;i++){//list.size()
//				Map map = (Map)list.get(i);
//				
//				dt_analysis analysis = dt_analysisservice.get(Integer.valueOf(String.valueOf(map.get("analysis_id"))));
//				Map returnmap = (Map)Standarddeviation(analysis.getDataprocess_id());
//				
//				
//				//预测值
//				analysis.setYcz(String.valueOf(returnmap.get("Average")));
//				//标准差
//				analysis.setBzc(String.valueOf(returnmap.get("result")));
//				//预测方法
//				analysis.setYcff("移动平均法");
//				
//				dt_analysisservice.saveOrUpdate(analysis);
//				
//				List sharedpartlist = dt_sharedpartservice.adminfindsharedpartfordataprocess_id(analysis.getDataprocess_id());
//				dt_sharedpart sharedpart = (dt_sharedpart)sharedpartlist.get(0);
//				sharedpart.setPredictionnumber(Integer.valueOf(df.format(returnmap.get("Average"))));
//				dt_sharedpartservice.saveOrUpdate(sharedpart);
//				
//				System.out.println("==="+i);
//			}
			json.put("code", "100");
			json.put("info", "统计成功，请刷新页面");
		}catch(Exception e){
			e.printStackTrace();
			json.put("code", "400");
			json.put("info", "系统错误");
		}
		return json.toString();
	}
//	//标准差计算
//	private JSONObject Standarddeviation(Integer dataprocess_id) throws IOException {
//		JSONObject json = new JSONObject();
//		DecimalFormat df = new DecimalFormat("#.00");
//		Double Average=(double) 0;
//		Double result=(double) 0;
//		Double real=(double) 0;
//		dt_dataprocess dataprocess = dt_dataprocessservice.get(dataprocess_id);
//		Average= Double.valueOf(df.format((double)(dataprocess.getAge1()+dataprocess.getAge2()+dataprocess.getAge3()+dataprocess.getAge4()+dataprocess.getAge5()+dataprocess.getAge6()+dataprocess.getAge7()+dataprocess.getAge8()+dataprocess.getAge9()+dataprocess.getAge10())/10));
//		Double number = (Math.pow((Double.valueOf(dataprocess.getAge1())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge2())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge3())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge4())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge5())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge6())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge7())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge8())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge9())-Average),2)+Math.pow((Double.valueOf(dataprocess.getAge10())-Average),2))/10;
//		result = Double.valueOf(df.format(Math.sqrt(number)));
//		json.put("Average", Average);
//		json.put("result", result);
//		return json;
//	}
	//装备重要度修改
	@RequestMapping("/adminsharedpartedit")
	public String adminsharedpartedit(HttpServletRequest request, HttpServletResponse resp,Integer sharedpart_id) 
			throws IOException {
		dt_sharedpart sharedpart = dt_sharedpartservice.get(sharedpart_id);
		request.setAttribute("sharedpart", sharedpart);
		return "admin/sharedpartedit";
	}	
	@RequestMapping(value = "/adminsharedparteditajax",produces = "application/json; charset=utf-8")
	@ResponseBody
	private String adminsharedparteditajax(HttpServletRequest request,HttpServletResponse resp,Integer sharedpart_id,
			String zbzyd) throws IOException {
		HttpSession session = request.getSession();
		resp.setHeader("Access-Control-Allow-Origin", "*");
		resp.setHeader("Access-Control-Allow-Methods", "GET,POST");
		JSONObject json = new JSONObject();
		DecimalFormat df = new DecimalFormat("#");
		try{
			dt_sharedpart sharedpart = dt_sharedpartservice.get(sharedpart_id);
			sharedpart.setZbzyd(zbzyd);
			dt_sharedpartservice.saveOrUpdate(sharedpart);
			
			json.put("code", "100");
			json.put("info", "更新成功");
		}catch(Exception e){
			e.printStackTrace();
			json.put("code", "400");
			json.put("info", "系统错误");
		}
		return json.toString();
	}
}






