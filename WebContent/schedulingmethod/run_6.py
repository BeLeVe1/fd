import numpy as np
import copy
import matplotlib.pyplot as plt

from action_choose_def import action_choose
from initial_def import initial, reinitial_swap, reinitial_insert, initial_ran
from fitness_def import fitness, et_getfit
from decoding_def import decoding, decoding_
from crossover_def import crossover_pox, crossover_ppx, crossover_bin
from pls_def import pls, dc, insertimprovement
from select_def import select, select_sa
from mutation_def import mutation_neh_best, mutation_2, mutation_3, mutation_swap_best, mutation_swap_rand, \
    mutation_insert_best_rand, mutation_insert_rand_rand, mutation_rand_pox
from gantt_def import gantt
import time
import math
from individual_density_def import individual_density
from vnd_def import NEII, NEIS, NEEI, NEES, NEIGS, NESIGS


# 小规模
Lbn = [3, 2, 5, 2, 4, 4, 4, 4, 2, 3, 4, 5, 5, 4, 5, 2, 5, 5, 4, 5, 4, 3, 1, 2, 4, 1, 4, 3, 3, 5, 3, 1, 2, 1, 1, 5, 2, 5, 2, 2, 1, 4, 2, 5, 5, 1, 5, 5, 1, 1]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5]]
A = [5, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 5, 5, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 1, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
B = [10, 2, 2, 2, 2, 2, 2, 10, 10, 2, 2, 10, 10, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 10, 2, 10, 2, 2, 10, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
P = [[999, 999, 95, 999, 999, 999, 20, 97, 999, 31], [999, 21, 999, 999, 999, 70, 67, 999, 999, 13], [999, 999, 999, 999, 94, 999, 999, 999, 72, 55], [999, 93, 999, 999, 999, 65, 37, 999, 999, 63], [999, 999, 999, 46, 999, 999, 999, 52, 34, 78], [999, 999, 999, 47, 999, 999, 999, 24, 97, 13], [999, 999, 999, 89, 999, 999, 999, 45, 16, 96], [999, 999, 999, 57, 999, 999, 999, 41, 50, 84], [999, 16, 999, 999, 999, 54, 71, 999, 999, 18], [999, 999, 45, 999, 999, 999, 79, 55, 999, 80], [999, 999, 999, 44, 999, 999, 999, 33, 39, 28], [999, 999, 999, 999, 51, 999, 999, 999, 55, 37], [999, 999, 999, 999, 56, 999, 999, 999, 23, 13], [999, 999, 999, 16, 999, 999, 999, 45, 85, 70], [999, 999, 999, 999, 93, 999, 999, 999, 94, 95], [999, 21, 999, 999, 999, 41, 61, 999, 999, 58], [999, 999, 999, 999, 25, 999, 999, 999, 100, 77], [999, 999, 999, 999, 44, 999, 999, 999, 58, 94], [999, 999, 999, 78, 999, 999, 999, 69, 99, 76], [999, 999, 999, 999, 51, 999, 999, 999, 42, 99], [999, 999, 999, 97, 999, 999, 999, 31, 74, 95], [999, 999, 85, 999, 999, 999, 24, 95, 999, 24], [45, 999, 999, 999, 999, 63, 999, 999, 999, 53], [999, 35, 999, 999, 999, 18, 37, 999, 999, 65], [999, 999, 999, 22, 999, 999, 999, 96, 29, 65], [47, 999, 999, 999, 999, 54, 999, 999, 999, 36], [999, 999, 999, 63, 999, 999, 999, 66, 51, 11], [999, 999, 16, 999, 999, 999, 30, 34, 999, 76], [999, 999, 66, 999, 999, 999, 87, 60, 999, 31], [999, 999, 999, 999, 79, 999, 999, 999, 93, 42], [999, 999, 37, 999, 999, 999, 89, 95, 999, 80], [20, 999, 999, 999, 999, 32, 999, 999, 999, 92], [999, 94, 999, 999, 999, 92, 36, 999, 999, 62], [61, 999, 999, 999, 999, 84, 999, 999, 999, 88], [40, 999, 999, 999, 999, 32, 999, 999, 999, 35], [999, 999, 999, 999, 51, 999, 999, 999, 15, 66], [999, 42, 999, 999, 999, 45, 55, 999, 999, 100], [999, 999, 999, 999, 42, 999, 999, 999, 10, 92], [999, 18, 999, 999, 999, 33, 10, 999, 999, 65], [999, 51, 999, 999, 999, 69, 21, 999, 999, 37], [10, 999, 999, 999, 999, 32, 999, 999, 999, 93], [999, 999, 999, 20, 999, 999, 999, 66, 38, 82], [999, 82, 999, 999, 999, 31, 46, 999, 999, 25], [999, 999, 999, 999, 89, 999, 999, 999, 50, 38], [999, 999, 999, 999, 85, 999, 999, 999, 86, 45], [56, 999, 999, 999, 999, 77, 999, 999, 999, 92], [999, 999, 999, 999, 79, 999, 999, 999, 88, 58], [999, 999, 999, 999, 82, 999, 999, 999, 63, 52], [19, 999, 999, 999, 999, 36, 999, 999, 999, 83], [91, 999, 999, 999, 999, 51, 999, 999, 999, 32]]
D = [[233, 293], [64, 105], [373, 466], [307, 401], [234, 313], [122, 214], [40, 138], [321, 413], [141, 182], [59, 109], [134, 179], [260, 308], [299, 333], [379, 409], [56, 161], [388, 422], [260, 346], [373, 438], [252, 356], [307, 398], [278, 389], [134, 208], [227, 299], [186, 231], [237, 294], [62, 124], [128, 145], [101, 149], [154, 190], [165, 234], [166, 246], [48, 133], [308, 404], [215, 279], [268, 315], [155, 232], [320, 387], [331, 397], [387, 415], [189, 259], [265, 295], [61, 158], [186, 234], [105, 189], [118, 212], [254, 351], [99, 170], [50, 123], [349, 412], [203, 287]]
# 大规模
# 8
Lbn = [1, 1, 2, 4, 5, 1, 3, 1, 1, 3, 5, 2, 4, 2, 2, 4, 5, 4, 4, 4, 5, 1, 2, 1, 1, 4, 1, 5, 2, 1, 5, 1, 2, 2, 1, 3, 4, 5, 3, 5, 5, 1, 5, 1, 1, 1, 5, 2, 5, 2, 5, 4, 2, 5, 2, 5, 1, 2, 5, 1, 1, 1, 1, 4, 2, 1, 5, 2, 2, 4, 5, 5, 1, 3, 1, 1, 5, 5, 3, 5, 1, 1, 1, 2, 3, 4, 1, 4, 4, 5, 5, 4, 1, 3, 2, 4, 2, 4, 5, 2]
Lbm = [[1], [2], [3], [4], [5], [1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]
A = [1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 1, 5, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 5, 1, 5, 5, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 1]
B = [2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 10, 10, 2, 10, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 10, 2, 10, 10, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 10, 2, 2, 10, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 2, 2]
P = [[15, 999, 999, 999, 999, 39, 999, 999, 999, 999, 57, 999, 999, 999, 73, 999, 999, 999, 53, 46], [25, 999, 999, 999, 999, 38, 999, 999, 999, 999, 20, 999, 999, 999, 57, 999, 999, 999, 55, 41], [999, 47, 999, 999, 999, 999, 11, 999, 999, 999, 30, 100, 999, 999, 38, 88, 999, 999, 49, 61], [999, 999, 999, 12, 999, 999, 999, 999, 83, 999, 999, 999, 42, 18, 999, 999, 85, 16, 95, 17], [999, 999, 999, 999, 92, 999, 999, 999, 999, 38, 999, 999, 999, 69, 999, 999, 999, 37, 62, 18], [77, 999, 999, 999, 999, 91, 999, 999, 999, 999, 70, 999, 999, 999, 43, 999, 999, 999, 54, 45], [999, 999, 55, 999, 999, 999, 999, 16, 999, 999, 999, 81, 53, 999, 999, 15, 17, 999, 44, 42], [73, 999, 999, 999, 999, 78, 999, 999, 999, 999, 25, 999, 999, 999, 53, 999, 999, 999, 88, 41], [88, 999, 999, 999, 999, 70, 999, 999, 999, 999, 43, 999, 999, 999, 32, 999, 999, 999, 80, 65], [999, 999, 68, 999, 999, 999, 999, 82, 999, 999, 999, 97, 53, 999, 999, 73, 51, 999, 73, 93], [999, 999, 999, 999, 14, 999, 999, 999, 999, 22, 999, 999, 999, 46, 999, 999, 999, 98, 49, 100], [999, 12, 999, 999, 999, 999, 67, 999, 999, 999, 59, 41, 999, 999, 85, 27, 999, 999, 17, 54], [999, 999, 999, 53, 999, 999, 999, 999, 59, 999, 999, 999, 87, 60, 999, 999, 96, 45, 84, 76], [999, 12, 999, 999, 999, 999, 20, 999, 999, 999, 35, 56, 999, 999, 26, 81, 999, 999, 30, 42], [999, 42, 999, 999, 999, 999, 29, 999, 999, 999, 89, 19, 999, 999, 21, 96, 999, 999, 18, 57], [999, 999, 999, 39, 999, 999, 999, 999, 41, 999, 999, 999, 56, 11, 999, 999, 54, 93, 90, 99], [999, 999, 999, 999, 98, 999, 999, 999, 999, 50, 999, 999, 999, 18, 999, 999, 999, 12, 43, 18], [999, 999, 999, 16, 999, 999, 999, 999, 13, 999, 999, 999, 50, 15, 999, 999, 63, 82, 69, 83], [999, 999, 999, 64, 999, 999, 999, 999, 31, 999, 999, 999, 57, 72, 999, 999, 98, 36, 32, 74], [999, 999, 999, 96, 999, 999, 999, 999, 97, 999, 999, 999, 33, 46, 999, 999, 37, 69, 25, 30], [999, 999, 999, 999, 28, 999, 999, 999, 999, 75, 999, 999, 999, 61, 999, 999, 999, 78, 98, 10], [61, 999, 999, 999, 999, 60, 999, 999, 999, 999, 94, 999, 999, 999, 17, 999, 999, 999, 17, 25], [999, 83, 999, 999, 999, 999, 26, 999, 999, 999, 94, 64, 999, 999, 28, 73, 999, 999, 98, 71], [81, 999, 999, 999, 999, 62, 999, 999, 999, 999, 44, 999, 999, 999, 19, 999, 999, 999, 61, 69], [52, 999, 999, 999, 999, 53, 999, 999, 999, 999, 53, 999, 999, 999, 84, 999, 999, 999, 77, 51], [999, 999, 999, 35, 999, 999, 999, 999, 15, 999, 999, 999, 56, 87, 999, 999, 74, 78, 18, 11], [14, 999, 999, 999, 999, 76, 999, 999, 999, 999, 26, 999, 999, 999, 92, 999, 999, 999, 79, 50], [999, 999, 999, 999, 85, 999, 999, 999, 999, 21, 999, 999, 999, 97, 999, 999, 999, 92, 89, 25], [999, 90, 999, 999, 999, 999, 97, 999, 999, 999, 45, 26, 999, 999, 80, 65, 999, 999, 54, 49], [97, 999, 999, 999, 999, 95, 999, 999, 999, 999, 13, 999, 999, 999, 32, 999, 999, 999, 60, 90], [999, 999, 999, 999, 54, 999, 999, 999, 999, 78, 999, 999, 999, 63, 999, 999, 999, 91, 11, 33], [77, 999, 999, 999, 999, 80, 999, 999, 999, 999, 14, 999, 999, 999, 69, 999, 999, 999, 36, 57], [999, 29, 999, 999, 999, 999, 39, 999, 999, 999, 48, 71, 999, 999, 20, 100, 999, 999, 49, 13], [999, 35, 999, 999, 999, 999, 15, 999, 999, 999, 61, 25, 999, 999, 48, 83, 999, 999, 45, 46], [25, 999, 999, 999, 999, 28, 999, 999, 999, 999, 61, 999, 999, 999, 14, 999, 999, 999, 81, 64], [999, 999, 46, 999, 999, 999, 999, 26, 999, 999, 999, 59, 53, 999, 999, 50, 11, 999, 42, 24], [999, 999, 999, 24, 999, 999, 999, 999, 60, 999, 999, 999, 52, 29, 999, 999, 78, 51, 77, 16], [999, 999, 999, 999, 19, 999, 999, 999, 999, 55, 999, 999, 999, 70, 999, 999, 999, 50, 18, 90], [999, 999, 27, 999, 999, 999, 999, 59, 999, 999, 999, 27, 15, 999, 999, 59, 97, 999, 96, 28], [999, 999, 999, 999, 61, 999, 999, 999, 999, 100, 999, 999, 999, 76, 999, 999, 999, 80, 56, 90], [999, 999, 999, 999, 16, 999, 999, 999, 999, 42, 999, 999, 999, 65, 999, 999, 999, 54, 32, 18], [29, 999, 999, 999, 999, 28, 999, 999, 999, 999, 91, 999, 999, 999, 97, 999, 999, 999, 88, 60], [999, 999, 999, 999, 76, 999, 999, 999, 999, 100, 999, 999, 999, 48, 999, 999, 999, 85, 76, 38], [30, 999, 999, 999, 999, 88, 999, 999, 999, 999, 77, 999, 999, 999, 26, 999, 999, 999, 79, 10], [75, 999, 999, 999, 999, 36, 999, 999, 999, 999, 53, 999, 999, 999, 81, 999, 999, 999, 74, 41], [76, 999, 999, 999, 999, 84, 999, 999, 999, 999, 40, 999, 999, 999, 38, 999, 999, 999, 22, 20], [999, 999, 999, 999, 61, 999, 999, 999, 999, 53, 999, 999, 999, 99, 999, 999, 999, 100, 50, 76], [999, 54, 999, 999, 999, 999, 76, 999, 999, 999, 85, 87, 999, 999, 69, 43, 999, 999, 43, 17], [999, 999, 999, 999, 34, 999, 999, 999, 999, 17, 999, 999, 999, 94, 999, 999, 999, 10, 22, 83], [999, 15, 999, 999, 999, 999, 98, 999, 999, 999, 39, 87, 999, 999, 24, 17, 999, 999, 39, 61], [999, 999, 999, 999, 29, 999, 999, 999, 999, 79, 999, 999, 999, 45, 999, 999, 999, 50, 46, 79], [999, 999, 999, 70, 999, 999, 999, 999, 89, 999, 999, 999, 95, 25, 999, 999, 63, 22, 85, 52], [999, 46, 999, 999, 999, 999, 40, 999, 999, 999, 62, 55, 999, 999, 76, 99, 999, 999, 83, 46], [999, 999, 999, 999, 37, 999, 999, 999, 999, 19, 999, 999, 999, 72, 999, 999, 999, 22, 17, 44], [999, 77, 999, 999, 999, 999, 61, 999, 999, 999, 22, 76, 999, 999, 73, 29, 999, 999, 66, 50], [999, 999, 999, 999, 60, 999, 999, 999, 999, 65, 999, 999, 999, 60, 999, 999, 999, 44, 57, 16], [90, 999, 999, 999, 999, 98, 999, 999, 999, 999, 14, 999, 999, 999, 19, 999, 999, 999, 61, 33], [999, 44, 999, 999, 999, 999, 75, 999, 999, 999, 37, 83, 999, 999, 53, 51, 999, 999, 56, 86], [999, 999, 999, 999, 55, 999, 999, 999, 999, 83, 999, 999, 999, 62, 999, 999, 999, 30, 92, 11], [36, 999, 999, 999, 999, 96, 999, 999, 999, 999, 78, 999, 999, 999, 14, 999, 999, 999, 73, 46], [60, 999, 999, 999, 999, 29, 999, 999, 999, 999, 70, 999, 999, 999, 66, 999, 999, 999, 80, 96], [67, 999, 999, 999, 999, 36, 999, 999, 999, 999, 58, 999, 999, 999, 14, 999, 999, 999, 10, 82], [40, 999, 999, 999, 999, 81, 999, 999, 999, 999, 95, 999, 999, 999, 72, 999, 999, 999, 12, 78], [999, 999, 999, 16, 999, 999, 999, 999, 80, 999, 999, 999, 51, 39, 999, 999, 37, 42, 55, 99], [999, 26, 999, 999, 999, 999, 16, 999, 999, 999, 13, 60, 999, 999, 62, 42, 999, 999, 20, 45], [85, 999, 999, 999, 999, 62, 999, 999, 999, 999, 10, 999, 999, 999, 75, 999, 999, 999, 71, 71], [999, 999, 999, 999, 84, 999, 999, 999, 999, 72, 999, 999, 999, 64, 999, 999, 999, 55, 34, 11], [999, 20, 999, 999, 999, 999, 29, 999, 999, 999, 89, 68, 999, 999, 19, 99, 999, 999, 11, 15], [999, 15, 999, 999, 999, 999, 81, 999, 999, 999, 88, 48, 999, 999, 53, 29, 999, 999, 87, 30], [999, 999, 999, 29, 999, 999, 999, 999, 27, 999, 999, 999, 19, 54, 999, 999, 13, 54, 32, 92], [999, 999, 999, 999, 37, 999, 999, 999, 999, 74, 999, 999, 999, 27, 999, 999, 999, 16, 40, 12], [999, 999, 999, 999, 64, 999, 999, 999, 999, 96, 999, 999, 999, 74, 999, 999, 999, 41, 54, 49], [86, 999, 999, 999, 999, 41, 999, 999, 999, 999, 95, 999, 999, 999, 56, 999, 999, 999, 85, 41], [999, 999, 73, 999, 999, 999, 999, 57, 999, 999, 999, 100, 24, 999, 999, 57, 56, 999, 44, 97], [43, 999, 999, 999, 999, 77, 999, 999, 999, 999, 75, 999, 999, 999, 38, 999, 999, 999, 31, 53], [43, 999, 999, 999, 999, 25, 999, 999, 999, 999, 15, 999, 999, 999, 82, 999, 999, 999, 14, 50], [999, 999, 999, 999, 30, 999, 999, 999, 999, 31, 999, 999, 999, 27, 999, 999, 999, 68, 41, 64], [999, 999, 999, 999, 24, 999, 999, 999, 999, 91, 999, 999, 999, 14, 999, 999, 999, 77, 15, 66], [999, 999, 89, 999, 999, 999, 999, 73, 999, 999, 999, 31, 26, 999, 999, 33, 91, 999, 41, 16], [999, 999, 999, 999, 41, 999, 999, 999, 999, 11, 999, 999, 999, 72, 999, 999, 999, 39, 79, 14], [88, 999, 999, 999, 999, 98, 999, 999, 999, 999, 39, 999, 999, 999, 21, 999, 999, 999, 17, 34], [18, 999, 999, 999, 999, 100, 999, 999, 999, 999, 18, 999, 999, 999, 14, 999, 999, 999, 49, 50], [12, 999, 999, 999, 999, 99, 999, 999, 999, 999, 25, 999, 999, 999, 85, 999, 999, 999, 38, 92], [999, 50, 999, 999, 999, 999, 33, 999, 999, 999, 13, 70, 999, 999, 88, 11, 999, 999, 35, 83], [999, 999, 15, 999, 999, 999, 999, 44, 999, 999, 999, 91, 39, 999, 999, 64, 75, 999, 31, 23], [999, 999, 999, 37, 999, 999, 999, 999, 31, 999, 999, 999, 36, 16, 999, 999, 46, 43, 60, 59], [55, 999, 999, 999, 999, 34, 999, 999, 999, 999, 75, 999, 999, 999, 100, 999, 999, 999, 36, 17], [999, 999, 999, 84, 999, 999, 999, 999, 85, 999, 999, 999, 87, 20, 999, 999, 46, 82, 47, 37], [999, 999, 999, 95, 999, 999, 999, 999, 24, 999, 999, 999, 73, 80, 999, 999, 68, 57, 68, 77], [999, 999, 999, 999, 17, 999, 999, 999, 999, 94, 999, 999, 999, 58, 999, 999, 999, 22, 93, 52], [999, 999, 999, 999, 56, 999, 999, 999, 999, 94, 999, 999, 999, 56, 999, 999, 999, 42, 100, 58], [999, 999, 999, 32, 999, 999, 999, 999, 54, 999, 999, 999, 35, 18, 999, 999, 100, 55, 85, 77], [88, 999, 999, 999, 999, 68, 999, 999, 999, 999, 69, 999, 999, 999, 15, 999, 999, 999, 42, 74], [999, 999, 14, 999, 999, 999, 999, 43, 999, 999, 999, 59, 69, 999, 999, 73, 12, 999, 33, 51], [999, 12, 999, 999, 999, 999, 59, 999, 999, 999, 84, 98, 999, 999, 81, 15, 999, 999, 77, 30], [999, 999, 999, 59, 999, 999, 999, 999, 51, 999, 999, 999, 24, 23, 999, 999, 18, 89, 75, 96], [999, 82, 999, 999, 999, 999, 49, 999, 999, 999, 48, 65, 999, 999, 28, 41, 999, 999, 55, 28], [999, 999, 999, 59, 999, 999, 999, 999, 40, 999, 999, 999, 40, 75, 999, 999, 52, 18, 26, 92], [999, 999, 999, 999, 29, 999, 999, 999, 999, 53, 999, 999, 999, 32, 999, 999, 999, 81, 85, 70], [999, 63, 999, 999, 999, 999, 73, 999, 999, 999, 90, 85, 999, 999, 93, 44, 999, 999, 12, 41]]
D = [[52, 70], [67, 119], [325, 343], [238, 319], [38, 85], [213, 328], [10, 107], [203, 282], [205, 292], [278, 332], [252, 289], [323, 398], [35, 94], [234, 251], [74, 131], [242, 269], [245, 325], [17, 111], [303, 435], [0, 121], [97, 185], [281, 367], [300, 433], [53, 98], [132, 203], [15, 47], [45, 150], [123, 157], [225, 322], [185, 245], [151, 212], [214, 273], [238, 344], [157, 244], [21, 56], [25, 76], [192, 280], [179, 248], [143, 164], [194, 290], [360, 376], [107, 181], [210, 262], [42, 139], [33, 122], [18, 57], [254, 382], [233, 320], [282, 321], [226, 359], [227, 317], [326, 366], [6, 111], [225, 292], [51, 75], [183, 258], [52, 135], [86, 190], [32, 91], [57, 157], [203, 296], [282, 304], [115, 217], [233, 365], [293, 326], [306, 370], [316, 348], [176, 214], [230, 257], [98, 225], [261, 352], [154, 231], [87, 173], [68, 92], [217, 291], [12, 111], [50, 83], [54, 167], [174, 262], [212, 223], [207, 237], [171, 197], [104, 147], [142, 182], [294, 312], [341, 377], [274, 316], [204, 286], [241, 335], [127, 219], [17, 72], [143, 271], [255, 296], [91, 147], [126, 225], [297, 373], [116, 165], [162, 221], [191, 242], [52, 73]]
# 1
Lbn = [1, 3, 1, 4, 2, 2, 4, 1, 4, 1, 1, 1, 3, 5, 4, 1, 5, 4, 5, 1, 2, 3, 1, 3, 2, 2, 1, 5, 5, 5, 3, 2, 4, 2, 4, 5, 4, 4, 5, 2, 5, 1, 2, 4, 3, 3, 5, 2, 1, 5, 1, 1, 5, 5, 4, 3, 5, 4, 1, 3, 3, 1, 3, 5, 1, 2, 5, 4, 3, 2, 3, 1, 5, 3, 1, 3, 3, 5, 1, 2, 1, 5, 1, 5, 5, 2, 3, 2, 4, 4, 3, 4, 5, 5, 3, 5, 2, 5, 4, 5]
Lbm = [[1], [2], [3], [4], [5], [1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]
A = [1, 1, 1, 5, 1, 1, 1, 5, 1, 5, 1, 1, 1, 1, 5, 1, 1, 5, 1, 5, 1, 1, 5, 1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 1, 5, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 5, 1, 1, 1, 1]
B = [2, 2, 2, 10, 2, 2, 2, 10, 2, 10, 2, 2, 2, 2, 10, 2, 2, 10, 2, 10, 2, 2, 10, 2, 2, 2, 10, 2, 2, 10, 2, 2, 10, 2, 10, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 10, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 10, 2, 2, 2, 2]
P = [[31, 999, 999, 999, 999, 49, 999, 999, 999, 999, 27, 999, 999, 999, 61, 999, 999, 999, 80, 29], [999, 999, 91, 999, 999, 999, 999, 48, 999, 999, 999, 55, 65, 999, 999, 81, 61, 999, 67, 99], [26, 999, 999, 999, 999, 76, 999, 999, 999, 999, 30, 999, 999, 999, 69, 999, 999, 999, 30, 74], [999, 999, 999, 64, 999, 999, 999, 999, 80, 999, 999, 999, 42, 100, 999, 999, 39, 42, 90, 91], [999, 36, 999, 999, 999, 999, 51, 999, 999, 999, 83, 59, 999, 999, 58, 28, 999, 999, 70, 93], [999, 84, 999, 999, 999, 999, 44, 999, 999, 999, 61, 28, 999, 999, 33, 40, 999, 999, 49, 95], [999, 999, 999, 93, 999, 999, 999, 999, 21, 999, 999, 999, 83, 28, 999, 999, 97, 59, 74, 39], [47, 999, 999, 999, 999, 65, 999, 999, 999, 999, 33, 999, 999, 999, 62, 999, 999, 999, 49, 43], [999, 999, 999, 96, 999, 999, 999, 999, 53, 999, 999, 999, 79, 72, 999, 999, 27, 50, 52, 22], [46, 999, 999, 999, 999, 21, 999, 999, 999, 999, 57, 999, 999, 999, 82, 999, 999, 999, 68, 62], [45, 999, 999, 999, 999, 30, 999, 999, 999, 999, 67, 999, 999, 999, 44, 999, 999, 999, 72, 80], [41, 999, 999, 999, 999, 58, 999, 999, 999, 999, 68, 999, 999, 999, 43, 999, 999, 999, 77, 41], [999, 999, 86, 999, 999, 999, 999, 43, 999, 999, 999, 37, 94, 999, 999, 56, 59, 999, 86, 55], [999, 999, 999, 999, 59, 999, 999, 999, 999, 74, 999, 999, 999, 78, 999, 999, 999, 31, 34, 38], [999, 999, 999, 86, 999, 999, 999, 999, 92, 999, 999, 999, 83, 99, 999, 999, 86, 43, 65, 72], [75, 999, 999, 999, 999, 78, 999, 999, 999, 999, 63, 999, 999, 999, 31, 999, 999, 999, 29, 76], [999, 999, 999, 999, 36, 999, 999, 999, 999, 61, 999, 999, 999, 31, 999, 999, 999, 88, 73, 43], [999, 999, 999, 47, 999, 999, 999, 999, 27, 999, 999, 999, 40, 88, 999, 999, 95, 39, 81, 98], [999, 999, 999, 999, 93, 999, 999, 999, 999, 61, 999, 999, 999, 64, 999, 999, 999, 21, 72, 58], [39, 999, 999, 999, 999, 93, 999, 999, 999, 999, 42, 999, 999, 999, 54, 999, 999, 999, 48, 51], [999, 70, 999, 999, 999, 999, 58, 999, 999, 999, 46, 62, 999, 999, 80, 93, 999, 999, 47, 21], [999, 999, 55, 999, 999, 999, 999, 67, 999, 999, 999, 30, 80, 999, 999, 45, 25, 999, 45, 67], [87, 999, 999, 999, 999, 93, 999, 999, 999, 999, 20, 999, 999, 999, 55, 999, 999, 999, 80, 44], [999, 999, 88, 999, 999, 999, 999, 64, 999, 999, 999, 85, 28, 999, 999, 37, 31, 999, 88, 84], [999, 31, 999, 999, 999, 999, 37, 999, 999, 999, 53, 30, 999, 999, 79, 78, 999, 999, 66, 36], [999, 42, 999, 999, 999, 999, 41, 999, 999, 999, 94, 84, 999, 999, 60, 37, 999, 999, 50, 31], [79, 999, 999, 999, 999, 49, 999, 999, 999, 999, 46, 999, 999, 999, 43, 999, 999, 999, 95, 70], [999, 999, 999, 999, 72, 999, 999, 999, 999, 49, 999, 999, 999, 27, 999, 999, 999, 93, 48, 31], [999, 999, 999, 999, 72, 999, 999, 999, 999, 85, 999, 999, 999, 94, 999, 999, 999, 75, 81, 95], [999, 999, 999, 999, 25, 999, 999, 999, 999, 37, 999, 999, 999, 29, 999, 999, 999, 98, 25, 47], [999, 999, 93, 999, 999, 999, 999, 87, 999, 999, 999, 76, 79, 999, 999, 31, 80, 999, 36, 41], [999, 84, 999, 999, 999, 999, 59, 999, 999, 999, 32, 91, 999, 999, 58, 47, 999, 999, 67, 83], [999, 999, 999, 54, 999, 999, 999, 999, 40, 999, 999, 999, 83, 45, 999, 999, 33, 33, 32, 53], [999, 80, 999, 999, 999, 999, 92, 999, 999, 999, 39, 94, 999, 999, 55, 54, 999, 999, 98, 34], [999, 999, 999, 30, 999, 999, 999, 999, 52, 999, 999, 999, 72, 88, 999, 999, 85, 86, 55, 47], [999, 999, 999, 999, 59, 999, 999, 999, 999, 98, 999, 999, 999, 72, 999, 999, 999, 42, 60, 34], [999, 999, 999, 57, 999, 999, 999, 999, 68, 999, 999, 999, 24, 68, 999, 999, 63, 28, 84, 28], [999, 999, 999, 33, 999, 999, 999, 999, 73, 999, 999, 999, 69, 76, 999, 999, 77, 23, 20, 87], [999, 999, 999, 999, 83, 999, 999, 999, 999, 75, 999, 999, 999, 75, 999, 999, 999, 75, 44, 57], [999, 52, 999, 999, 999, 999, 45, 999, 999, 999, 66, 62, 999, 999, 55, 65, 999, 999, 93, 91], [999, 999, 999, 999, 48, 999, 999, 999, 999, 91, 999, 999, 999, 88, 999, 999, 999, 24, 81, 92], [21, 999, 999, 999, 999, 35, 999, 999, 999, 999, 95, 999, 999, 999, 23, 999, 999, 999, 37, 48], [999, 59, 999, 999, 999, 999, 66, 999, 999, 999, 35, 95, 999, 999, 41, 93, 999, 999, 84, 92], [999, 999, 999, 85, 999, 999, 999, 999, 20, 999, 999, 999, 54, 71, 999, 999, 96, 55, 68, 80], [999, 999, 81, 999, 999, 999, 999, 96, 999, 999, 999, 87, 72, 999, 999, 97, 67, 999, 83, 66], [999, 999, 65, 999, 999, 999, 999, 53, 999, 999, 999, 84, 65, 999, 999, 45, 56, 999, 47, 56], [999, 999, 999, 999, 56, 999, 999, 999, 999, 92, 999, 999, 999, 92, 999, 999, 999, 24, 72, 72], [999, 33, 999, 999, 999, 999, 77, 999, 999, 999, 50, 77, 999, 999, 30, 87, 999, 999, 45, 81], [78, 999, 999, 999, 999, 59, 999, 999, 999, 999, 31, 999, 999, 999, 73, 999, 999, 999, 72, 93], [999, 999, 999, 999, 73, 999, 999, 999, 999, 49, 999, 999, 999, 62, 999, 999, 999, 31, 67, 49], [39, 999, 999, 999, 999, 78, 999, 999, 999, 999, 53, 999, 999, 999, 88, 999, 999, 999, 27, 53], [82, 999, 999, 999, 999, 55, 999, 999, 999, 999, 66, 999, 999, 999, 37, 999, 999, 999, 83, 60], [999, 999, 999, 999, 99, 999, 999, 999, 999, 20, 999, 999, 999, 90, 999, 999, 999, 79, 61, 95], [999, 999, 999, 999, 95, 999, 999, 999, 999, 64, 999, 999, 999, 86, 999, 999, 999, 42, 59, 33], [999, 999, 999, 58, 999, 999, 999, 999, 26, 999, 999, 999, 46, 70, 999, 999, 27, 54, 28, 32], [999, 999, 61, 999, 999, 999, 999, 90, 999, 999, 999, 84, 75, 999, 999, 84, 98, 999, 68, 99], [999, 999, 999, 999, 53, 999, 999, 999, 999, 73, 999, 999, 999, 39, 999, 999, 999, 30, 51, 82], [999, 999, 999, 33, 999, 999, 999, 999, 39, 999, 999, 999, 54, 79, 999, 999, 82, 91, 86, 38], [90, 999, 999, 999, 999, 90, 999, 999, 999, 999, 42, 999, 999, 999, 32, 999, 999, 999, 84, 42], [999, 999, 74, 999, 999, 999, 999, 55, 999, 999, 999, 78, 23, 999, 999, 29, 92, 999, 72, 47], [999, 999, 90, 999, 999, 999, 999, 44, 999, 999, 999, 55, 32, 999, 999, 25, 38, 999, 70, 73], [43, 999, 999, 999, 999, 51, 999, 999, 999, 999, 64, 999, 999, 999, 61, 999, 999, 999, 26, 82], [999, 999, 43, 999, 999, 999, 999, 83, 999, 999, 999, 98, 39, 999, 999, 79, 45, 999, 21, 88], [999, 999, 999, 999, 71, 999, 999, 999, 999, 90, 999, 999, 999, 34, 999, 999, 999, 25, 44, 27], [29, 999, 999, 999, 999, 63, 999, 999, 999, 999, 83, 999, 999, 999, 42, 999, 999, 999, 22, 77], [999, 61, 999, 999, 999, 999, 24, 999, 999, 999, 67, 49, 999, 999, 75, 73, 999, 999, 47, 51], [999, 999, 999, 999, 99, 999, 999, 999, 999, 65, 999, 999, 999, 74, 999, 999, 999, 67, 63, 45], [999, 999, 999, 82, 999, 999, 999, 999, 94, 999, 999, 999, 35, 62, 999, 999, 32, 99, 87, 44], [999, 999, 36, 999, 999, 999, 999, 70, 999, 999, 999, 87, 91, 999, 999, 55, 47, 999, 87, 29], [999, 46, 999, 999, 999, 999, 48, 999, 999, 999, 76, 74, 999, 999, 28, 32, 999, 999, 90, 29], [999, 999, 96, 999, 999, 999, 999, 31, 999, 999, 999, 78, 43, 999, 999, 81, 69, 999, 57, 81], [41, 999, 999, 999, 999, 88, 999, 999, 999, 999, 31, 999, 999, 999, 75, 999, 999, 999, 41, 20], [999, 999, 999, 999, 57, 999, 999, 999, 999, 35, 999, 999, 999, 61, 999, 999, 999, 97, 43, 42], [999, 999, 62, 999, 999, 999, 999, 23, 999, 999, 999, 38, 68, 999, 999, 83, 24, 999, 88, 41], [95, 999, 999, 999, 999, 78, 999, 999, 999, 999, 96, 999, 999, 999, 66, 999, 999, 999, 76, 25], [999, 999, 54, 999, 999, 999, 999, 88, 999, 999, 999, 82, 49, 999, 999, 24, 90, 999, 74, 69], [999, 999, 67, 999, 999, 999, 999, 68, 999, 999, 999, 80, 48, 999, 999, 25, 70, 999, 77, 95], [999, 999, 999, 999, 85, 999, 999, 999, 999, 54, 999, 999, 999, 58, 999, 999, 999, 68, 88, 88], [96, 999, 999, 999, 999, 76, 999, 999, 999, 999, 67, 999, 999, 999, 68, 999, 999, 999, 93, 85], [999, 25, 999, 999, 999, 999, 88, 999, 999, 999, 68, 84, 999, 999, 30, 91, 999, 999, 63, 73], [36, 999, 999, 999, 999, 46, 999, 999, 999, 999, 22, 999, 999, 999, 65, 999, 999, 999, 41, 36], [999, 999, 999, 999, 28, 999, 999, 999, 999, 93, 999, 999, 999, 20, 999, 999, 999, 46, 37, 94], [85, 999, 999, 999, 999, 95, 999, 999, 999, 999, 72, 999, 999, 999, 47, 999, 999, 999, 81, 25], [999, 999, 999, 999, 68, 999, 999, 999, 999, 90, 999, 999, 999, 54, 999, 999, 999, 97, 35, 47], [999, 999, 999, 999, 62, 999, 999, 999, 999, 90, 999, 999, 999, 32, 999, 999, 999, 25, 46, 74], [999, 70, 999, 999, 999, 999, 89, 999, 999, 999, 35, 66, 999, 999, 66, 70, 999, 999, 70, 82], [999, 999, 83, 999, 999, 999, 999, 32, 999, 999, 999, 89, 42, 999, 999, 93, 75, 999, 67, 90], [999, 96, 999, 999, 999, 999, 38, 999, 999, 999, 93, 55, 999, 999, 21, 53, 999, 999, 90, 68], [999, 999, 999, 71, 999, 999, 999, 999, 21, 999, 999, 999, 92, 71, 999, 999, 97, 22, 43, 26], [999, 999, 999, 44, 999, 999, 999, 999, 84, 999, 999, 999, 98, 90, 999, 999, 76, 87, 59, 59], [999, 999, 36, 999, 999, 999, 999, 60, 999, 999, 999, 21, 41, 999, 999, 91, 48, 999, 42, 40], [999, 999, 999, 45, 999, 999, 999, 999, 86, 999, 999, 999, 21, 93, 999, 999, 92, 21, 44, 47], [999, 999, 999, 999, 45, 999, 999, 999, 999, 58, 999, 999, 999, 35, 999, 999, 999, 58, 62, 45], [999, 999, 999, 999, 23, 999, 999, 999, 999, 91, 999, 999, 999, 29, 999, 999, 999, 20, 91, 50], [999, 999, 79, 999, 999, 999, 999, 52, 999, 999, 999, 100, 51, 999, 999, 68, 98, 999, 93, 22], [999, 999, 999, 999, 95, 999, 999, 999, 999, 80, 999, 999, 999, 69, 999, 999, 999, 49, 74, 35], [999, 98, 999, 999, 999, 999, 97, 999, 999, 999, 43, 83, 999, 999, 51, 97, 999, 999, 24, 69], [999, 999, 999, 999, 100, 999, 999, 999, 999, 55, 999, 999, 999, 99, 999, 999, 999, 98, 51, 42], [999, 999, 999, 21, 999, 999, 999, 999, 43, 999, 999, 999, 73, 94, 999, 999, 34, 22, 22, 41], [999, 999, 999, 999, 54, 999, 999, 999, 999, 92, 999, 999, 999, 86, 999, 999, 999, 36, 66, 87]]
D = [[382, 420], [354, 416], [425, 466], [146, 193], [289, 373], [309, 349], [61, 132], [355, 411], [153, 206], [222, 254], [116, 179], [238, 304], [338, 423], [225, 281], [397, 467], [379, 466], [332, 421], [397, 504], [170, 246], [239, 329], [103, 191], [185, 252], [303, 394], [152, 220], [402, 465], [219, 317], [155, 239], [234, 337], [340, 431], [383, 495], [287, 325], [187, 281], [293, 364], [206, 290], [122, 191], [316, 403], [436, 466], [61, 146], [75, 127], [328, 383], [391, 440], [92, 152], [144, 232], [240, 304], [332, 447], [136, 197], [223, 287], [92, 122], [127, 216], [262, 301], [260, 294], [404, 484], [267, 333], [332, 381], [360, 429], [151, 267], [418, 489], [391, 438], [289, 342], [368, 444], [197, 251], [359, 421], [253, 351], [375, 419], [180, 268], [138, 227], [361, 445], [235, 309], [233, 271], [175, 272], [119, 197], [205, 294], [162, 268], [415, 485], [92, 122], [281, 342], [277, 384], [283, 340], [397, 468], [175, 225], [307, 336], [378, 462], [381, 482], [93, 129], [217, 265], [66, 161], [215, 282], [277, 391], [434, 476], [301, 360], [60, 146], [337, 435], [226, 269], [267, 304], [183, 274], [378, 442], [169, 249], [413, 458], [340, 371], [332, 395]]

Lbn = [5, 4, 3, 4, 5, 5, 2, 3, 1, 5, 5, 3, 1, 1, 5, 5, 5, 3, 4, 5, 5, 4, 2, 1, 3, 1, 3, 2, 5, 1, 1, 1, 3, 2, 2, 4, 2, 1, 3, 2, 1, 3, 1, 1, 2, 1, 1, 2, 5, 1, 2, 3, 5, 5, 1, 4, 2, 5, 1, 3, 4, 4, 4, 2, 2, 3, 4, 5, 5, 5, 4, 4, 3, 4, 2, 4, 4, 5, 4, 1, 5, 1, 1, 4, 4, 2, 2, 5, 2, 3, 1, 1, 5, 3, 3, 1, 5, 3, 2, 3]
Lbm = [[1], [2], [3], [4], [5], [1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]
A = [1, 1, 5, 1, 5, 1, 1, 5, 1, 5, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 5, 5, 1, 1, 5, 5, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 5, 1, 5, 1, 1]
B = [2, 2, 10, 2, 10, 2, 2, 10, 2, 10, 10, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 10, 10, 2, 2, 10, 10, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 10, 2, 10, 2, 2]
P = [[999, 999, 999, 999, 47, 999, 999, 999, 999, 31, 999, 999, 999, 63, 999, 999, 999, 83, 22, 49], [999, 999, 999, 60, 999, 999, 999, 999, 59, 999, 999, 999, 76, 36, 999, 999, 27, 84, 66, 78], [999, 999, 87, 999, 999, 999, 999, 63, 999, 999, 999, 86, 27, 999, 999, 22, 79, 999, 53, 79], [999, 999, 999, 77, 999, 999, 999, 999, 80, 999, 999, 999, 69, 92, 999, 999, 94, 13, 59, 48], [999, 999, 999, 999, 68, 999, 999, 999, 999, 43, 999, 999, 999, 88, 999, 999, 999, 14, 59, 36], [999, 999, 999, 999, 31, 999, 999, 999, 999, 92, 999, 999, 999, 64, 999, 999, 999, 42, 55, 30], [999, 50, 999, 999, 999, 999, 47, 999, 999, 999, 75, 49, 999, 999, 72, 45, 999, 999, 14, 43], [999, 999, 95, 999, 999, 999, 999, 59, 999, 999, 999, 80, 79, 999, 999, 27, 25, 999, 58, 82], [59, 999, 999, 999, 999, 73, 999, 999, 999, 999, 14, 999, 999, 999, 59, 999, 999, 999, 61, 42], [999, 999, 999, 999, 41, 999, 999, 999, 999, 19, 999, 999, 999, 73, 999, 999, 999, 66, 39, 71], [999, 999, 999, 999, 53, 999, 999, 999, 999, 87, 999, 999, 999, 76, 999, 999, 999, 27, 96, 64], [999, 999, 35, 999, 999, 999, 999, 26, 999, 999, 999, 90, 45, 999, 999, 49, 87, 999, 94, 93], [82, 999, 999, 999, 999, 26, 999, 999, 999, 999, 48, 999, 999, 999, 55, 999, 999, 999, 79, 15], [67, 999, 999, 999, 999, 73, 999, 999, 999, 999, 15, 999, 999, 999, 42, 999, 999, 999, 65, 100], [999, 999, 999, 999, 35, 999, 999, 999, 999, 96, 999, 999, 999, 82, 999, 999, 999, 21, 72, 12], [999, 999, 999, 999, 93, 999, 999, 999, 999, 47, 999, 999, 999, 53, 999, 999, 999, 96, 34, 61], [999, 999, 999, 999, 20, 999, 999, 999, 999, 19, 999, 999, 999, 94, 999, 999, 999, 21, 82, 35], [999, 999, 69, 999, 999, 999, 999, 71, 999, 999, 999, 37, 60, 999, 999, 50, 56, 999, 95, 49], [999, 999, 999, 35, 999, 999, 999, 999, 41, 999, 999, 999, 44, 84, 999, 999, 91, 36, 41, 97], [999, 999, 999, 999, 22, 999, 999, 999, 999, 64, 999, 999, 999, 10, 999, 999, 999, 69, 63, 54], [999, 999, 999, 999, 29, 999, 999, 999, 999, 27, 999, 999, 999, 77, 999, 999, 999, 11, 66, 19], [999, 999, 999, 40, 999, 999, 999, 999, 83, 999, 999, 999, 58, 52, 999, 999, 54, 52, 20, 33], [999, 33, 999, 999, 999, 999, 63, 999, 999, 999, 85, 90, 999, 999, 21, 40, 999, 999, 14, 21], [99, 999, 999, 999, 999, 71, 999, 999, 999, 999, 19, 999, 999, 999, 15, 999, 999, 999, 88, 84], [999, 999, 98, 999, 999, 999, 999, 72, 999, 999, 999, 91, 48, 999, 999, 100, 57, 999, 75, 17], [45, 999, 999, 999, 999, 27, 999, 999, 999, 999, 44, 999, 999, 999, 85, 999, 999, 999, 82, 36], [999, 999, 33, 999, 999, 999, 999, 20, 999, 999, 999, 91, 70, 999, 999, 57, 94, 999, 55, 56], [999, 13, 999, 999, 999, 999, 75, 999, 999, 999, 54, 39, 999, 999, 82, 76, 999, 999, 56, 34], [999, 999, 999, 999, 29, 999, 999, 999, 999, 69, 999, 999, 999, 11, 999, 999, 999, 30, 64, 50], [45, 999, 999, 999, 999, 68, 999, 999, 999, 999, 32, 999, 999, 999, 96, 999, 999, 999, 71, 90], [71, 999, 999, 999, 999, 50, 999, 999, 999, 999, 63, 999, 999, 999, 46, 999, 999, 999, 59, 58], [38, 999, 999, 999, 999, 79, 999, 999, 999, 999, 99, 999, 999, 999, 100, 999, 999, 999, 44, 37], [999, 999, 17, 999, 999, 999, 999, 11, 999, 999, 999, 28, 55, 999, 999, 38, 97, 999, 84, 74], [999, 90, 999, 999, 999, 999, 93, 999, 999, 999, 47, 98, 999, 999, 75, 38, 999, 999, 42, 42], [999, 74, 999, 999, 999, 999, 71, 999, 999, 999, 67, 16, 999, 999, 48, 24, 999, 999, 88, 56], [999, 999, 999, 77, 999, 999, 999, 999, 64, 999, 999, 999, 86, 76, 999, 999, 50, 82, 25, 34], [999, 79, 999, 999, 999, 999, 77, 999, 999, 999, 36, 59, 999, 999, 26, 26, 999, 999, 80, 74], [17, 999, 999, 999, 999, 85, 999, 999, 999, 999, 26, 999, 999, 999, 20, 999, 999, 999, 10, 26], [999, 999, 74, 999, 999, 999, 999, 79, 999, 999, 999, 94, 80, 999, 999, 12, 22, 999, 89, 53], [999, 22, 999, 999, 999, 999, 92, 999, 999, 999, 38, 35, 999, 999, 34, 66, 999, 999, 79, 82], [98, 999, 999, 999, 999, 76, 999, 999, 999, 999, 30, 999, 999, 999, 14, 999, 999, 999, 34, 40], [999, 999, 80, 999, 999, 999, 999, 36, 999, 999, 999, 77, 67, 999, 999, 92, 73, 999, 38, 34], [86, 999, 999, 999, 999, 88, 999, 999, 999, 999, 16, 999, 999, 999, 79, 999, 999, 999, 90, 25], [99, 999, 999, 999, 999, 76, 999, 999, 999, 999, 90, 999, 999, 999, 44, 999, 999, 999, 21, 42], [999, 78, 999, 999, 999, 999, 81, 999, 999, 999, 43, 89, 999, 999, 77, 65, 999, 999, 36, 83], [81, 999, 999, 999, 999, 78, 999, 999, 999, 999, 26, 999, 999, 999, 34, 999, 999, 999, 84, 23], [97, 999, 999, 999, 999, 28, 999, 999, 999, 999, 43, 999, 999, 999, 53, 999, 999, 999, 16, 100], [999, 21, 999, 999, 999, 999, 32, 999, 999, 999, 52, 85, 999, 999, 91, 55, 999, 999, 70, 53], [999, 999, 999, 999, 10, 999, 999, 999, 999, 66, 999, 999, 999, 44, 999, 999, 999, 83, 17, 80], [19, 999, 999, 999, 999, 31, 999, 999, 999, 999, 94, 999, 999, 999, 54, 999, 999, 999, 56, 68], [999, 79, 999, 999, 999, 999, 91, 999, 999, 999, 15, 47, 999, 999, 93, 16, 999, 999, 82, 44], [999, 999, 15, 999, 999, 999, 999, 50, 999, 999, 999, 46, 62, 999, 999, 79, 84, 999, 59, 17], [999, 999, 999, 999, 99, 999, 999, 999, 999, 15, 999, 999, 999, 75, 999, 999, 999, 19, 75, 79], [999, 999, 999, 999, 95, 999, 999, 999, 999, 66, 999, 999, 999, 41, 999, 999, 999, 69, 66, 46], [11, 999, 999, 999, 999, 65, 999, 999, 999, 999, 27, 999, 999, 999, 37, 999, 999, 999, 100, 93], [999, 999, 999, 85, 999, 999, 999, 999, 46, 999, 999, 999, 90, 51, 999, 999, 40, 87, 13, 17], [999, 45, 999, 999, 999, 999, 24, 999, 999, 999, 73, 77, 999, 999, 93, 27, 999, 999, 99, 35], [999, 999, 999, 999, 19, 999, 999, 999, 999, 71, 999, 999, 999, 34, 999, 999, 999, 43, 60, 39], [98, 999, 999, 999, 999, 84, 999, 999, 999, 999, 99, 999, 999, 999, 71, 999, 999, 999, 80, 76], [999, 999, 67, 999, 999, 999, 999, 100, 999, 999, 999, 100, 75, 999, 999, 54, 72, 999, 84, 38], [999, 999, 999, 76, 999, 999, 999, 999, 93, 999, 999, 999, 68, 84, 999, 999, 54, 78, 76, 16], [999, 999, 999, 13, 999, 999, 999, 999, 93, 999, 999, 999, 91, 86, 999, 999, 92, 25, 54, 18], [999, 999, 999, 99, 999, 999, 999, 999, 50, 999, 999, 999, 78, 57, 999, 999, 19, 100, 58, 61], [999, 89, 999, 999, 999, 999, 68, 999, 999, 999, 38, 51, 999, 999, 12, 33, 999, 999, 95, 75], [999, 97, 999, 999, 999, 999, 37, 999, 999, 999, 97, 74, 999, 999, 20, 12, 999, 999, 46, 23], [999, 999, 98, 999, 999, 999, 999, 25, 999, 999, 999, 23, 84, 999, 999, 48, 28, 999, 27, 43], [999, 999, 999, 81, 999, 999, 999, 999, 32, 999, 999, 999, 30, 89, 999, 999, 56, 34, 96, 85], [999, 999, 999, 999, 58, 999, 999, 999, 999, 27, 999, 999, 999, 91, 999, 999, 999, 11, 54, 84], [999, 999, 999, 999, 68, 999, 999, 999, 999, 89, 999, 999, 999, 86, 999, 999, 999, 91, 66, 32], [999, 999, 999, 999, 27, 999, 999, 999, 999, 80, 999, 999, 999, 82, 999, 999, 999, 76, 66, 31], [999, 999, 999, 24, 999, 999, 999, 999, 19, 999, 999, 999, 85, 78, 999, 999, 71, 24, 32, 69], [999, 999, 999, 17, 999, 999, 999, 999, 54, 999, 999, 999, 29, 76, 999, 999, 84, 13, 27, 20], [999, 999, 62, 999, 999, 999, 999, 55, 999, 999, 999, 66, 33, 999, 999, 44, 41, 999, 22, 42], [999, 999, 999, 57, 999, 999, 999, 999, 72, 999, 999, 999, 64, 22, 999, 999, 44, 61, 91, 24], [999, 29, 999, 999, 999, 999, 84, 999, 999, 999, 71, 46, 999, 999, 73, 63, 999, 999, 90, 32], [999, 999, 999, 27, 999, 999, 999, 999, 37, 999, 999, 999, 92, 76, 999, 999, 76, 40, 28, 39], [999, 999, 999, 95, 999, 999, 999, 999, 58, 999, 999, 999, 51, 82, 999, 999, 35, 63, 19, 43], [999, 999, 999, 999, 57, 999, 999, 999, 999, 88, 999, 999, 999, 68, 999, 999, 999, 81, 31, 97], [999, 999, 999, 64, 999, 999, 999, 999, 83, 999, 999, 999, 83, 91, 999, 999, 75, 95, 72, 69], [96, 999, 999, 999, 999, 23, 999, 999, 999, 999, 57, 999, 999, 999, 54, 999, 999, 999, 74, 82], [999, 999, 999, 999, 73, 999, 999, 999, 999, 53, 999, 999, 999, 83, 999, 999, 999, 14, 60, 85], [89, 999, 999, 999, 999, 90, 999, 999, 999, 999, 97, 999, 999, 999, 69, 999, 999, 999, 100, 15], [74, 999, 999, 999, 999, 72, 999, 999, 999, 999, 60, 999, 999, 999, 70, 999, 999, 999, 21, 74], [999, 999, 999, 75, 999, 999, 999, 999, 20, 999, 999, 999, 23, 75, 999, 999, 68, 87, 36, 50], [999, 999, 999, 59, 999, 999, 999, 999, 26, 999, 999, 999, 71, 97, 999, 999, 51, 16, 67, 77], [999, 64, 999, 999, 999, 999, 57, 999, 999, 999, 33, 87, 999, 999, 94, 64, 999, 999, 20, 59], [999, 40, 999, 999, 999, 999, 72, 999, 999, 999, 44, 58, 999, 999, 23, 53, 999, 999, 88, 75], [999, 999, 999, 999, 79, 999, 999, 999, 999, 74, 999, 999, 999, 97, 999, 999, 999, 71, 100, 90], [999, 47, 999, 999, 999, 999, 21, 999, 999, 999, 65, 39, 999, 999, 28, 62, 999, 999, 60, 97], [999, 999, 66, 999, 999, 999, 999, 42, 999, 999, 999, 60, 49, 999, 999, 45, 69, 999, 44, 66], [12, 999, 999, 999, 999, 53, 999, 999, 999, 999, 73, 999, 999, 999, 16, 999, 999, 999, 54, 28], [21, 999, 999, 999, 999, 84, 999, 999, 999, 999, 74, 999, 999, 999, 88, 999, 999, 999, 26, 44], [999, 999, 999, 999, 74, 999, 999, 999, 999, 24, 999, 999, 999, 82, 999, 999, 999, 88, 89, 47], [999, 999, 27, 999, 999, 999, 999, 58, 999, 999, 999, 85, 92, 999, 999, 74, 49, 999, 97, 73], [999, 999, 79, 999, 999, 999, 999, 35, 999, 999, 999, 92, 41, 999, 999, 63, 47, 999, 43, 41], [39, 999, 999, 999, 999, 100, 999, 999, 999, 999, 33, 999, 999, 999, 29, 999, 999, 999, 25, 34], [999, 999, 999, 999, 97, 999, 999, 999, 999, 22, 999, 999, 999, 10, 999, 999, 999, 39, 28, 23], [999, 999, 83, 999, 999, 999, 999, 82, 999, 999, 999, 54, 74, 999, 999, 41, 46, 999, 13, 53], [999, 63, 999, 999, 999, 999, 20, 999, 999, 999, 99, 61, 999, 999, 72, 75, 999, 999, 68, 59], [999, 999, 83, 999, 999, 999, 999, 89, 999, 999, 999, 34, 64, 999, 999, 30, 70, 999, 99, 38]]
D = [[249, 327], [64, 123], [132, 247], [16, 120], [307, 340], [298, 351], [54, 109], [229, 354], [345, 394], [84, 105], [44, 90], [43, 158], [147, 232], [53, 90], [84, 196], [154, 285], [193, 256], [287, 330], [235, 306], [227, 282], [303, 397], [69, 183], [92, 111], [215, 337], [81, 175], [5, 96], [38, 151], [152, 185], [276, 318], [114, 158], [305, 394], [180, 248], [206, 285], [21, 156], [287, 399], [307, 346], [5, 76], [94, 177], [208, 237], [248, 344], [61, 103], [249, 310], [48, 73], [234, 333], [38, 159], [252, 363], [329, 416], [293, 347], [83, 160], [68, 194], [123, 178], [166, 206], [133, 195], [14, 69], [272, 354], [14, 45], [160, 255], [108, 178], [10, 119], [270, 340], [167, 232], [298, 355], [242, 317], [224, 292], [257, 299], [186, 289], [54, 92], [216, 301], [168, 245], [253, 339], [327, 414], [44, 110], [82, 127], [285, 391], [288, 361], [201, 247], [24, 64], [332, 389], [241, 359], [117, 209], [196, 235], [167, 300], [81, 160], [318, 353], [96, 203], [249, 298], [92, 208], [13, 100], [102, 230], [193, 249], [154, 168], [242, 323], [223, 344], [89, 173], [197, 253], [101, 148], [52, 103], [140, 209], [247, 340], [290, 352]]

M = len(Lbm)  # 机器数
N = len(Lbn)  # 工件数
Ma = [[] for _ in range(N)]  # 每个零件可以使用的机器
Manum = np.zeros(N, dtype=np.int)  # 每个零件可以使用的机器数量
for n1 in range(N):  # 对于每个工件，计算Ma
    lbn = Lbn[n1]  # 这个工件在哪个类别的机器上加工
    for m in range(M):  # 每一个机器
        lbm = Lbm[m]  # lbm 机器m可以加工的类别
        i = 0
        lbmnum = len(Lbm[m])
        for l in range(lbmnum):  # 对于机器的每一个类别
            if lbm[i] == lbn:
                Ma[n1].append(m + 1)
                Manum[n1] += 1
                break
            i += 1

# 10个月台
# gen = 100  # 迭代次数
# POP_SIZE = 50  # 种群数量
# pm = 0.6
# pc = 0.8
# d = 45  # 滑动时间窗
# ps_vnd = 0.2  # 变邻域下降参数
# 20个月台
gen = 100  # 迭代次数
POP_SIZE = 50  # 种群数量
pm = 0.6
pc = 0.8
d = 45  # 滑动时间窗
ps_vnd = 0.2  # 变邻域下降参数

for g_gen in range(4):
    print(g_gen)
    time_start = time.time()
    POP = []
    Fit_POP = []
    ET_penalty_POP = []

    fit_max = []  # 储存算法跑出来的每一代的最优解的fitness
    pop_best = []  # 储存每一代的最优解
    et_min = []  # 储存每一代最小的惩罚值

    # 初始化种群
    POP_new = initial(M, N, Ma, Manum, POP_SIZE, D, P, A, B)
    # 解码
    # S 车辆任务开始作业的时间
    # E 车辆任务结束作业的时间
    # O 月台占用的时间
    S, E, O = decoding(POP_new, N, M, P, D, A, B)
    # 适应度
    Fit_POP_new, ET_penalty_POP_new = fitness(A, B, S, E, D)
    # print(Fit)

    # 找出最大的fitness
    maxre_f = copy.deepcopy(max(Fit_POP_new))
    h = Fit_POP_new.index(maxre_f)
    maxre_p = copy.deepcopy(POP_new[h])
    minre_et = copy.deepcopy(ET_penalty_POP_new[h])
    fit_max.append(maxre_f)
    pop_best.append(maxre_p)
    et_min.append(minre_et)
    # print(minre_et)

    # 记录最近d次的action
    action_list = []
    # 记录最近d次的reward
    reward_list = []
    # 记录最近d次的
    # 有几个action
    action_num = 6
    g = 0
    while g < gen and minre_et != 0:
        # print(g)
        action_choice = action_choose(action_num, action_list, reward_list)

        POP[:] = []
        POP = POP + POP_new
        POP_new[:] = []

        Fit_POP[:] = []
        Fit_POP = Fit_POP + Fit_POP_new
        Fit_POP_new[:] = []

        ET_penalty_POP[:] = []
        ET_penalty_POP = ET_penalty_POP + ET_penalty_POP_new
        ET_penalty_POP_new[:] = []
        # 变异
        if action_choice == 0 or action_choice == 3:
            # 对所有个体进行随机swap，效果比较好，940左右在200代左右停下，多样性还可以
            POP_mutation = mutation_swap_rand(POP, POP, N, pm)
        if action_choice == 1 or action_choice == 4:
            # 随机3个做pox，效果比较好，950左右300代左右停下
            POP_mutation = mutation_rand_pox(POP, POP, N, pm)
        if action_choice == 2 or action_choice == 5:
            # 对最优个体进行随机插入，有点用，作用不大，1100左右500代一直进化速度较慢
            # POP_mutation = mutation_insert_best_rand(pop_best[fit_max.index(max(fit_max))], POP, N, Ma, Manum)

            # 对随机个体进行随机插入，基本没有什么用
            POP_mutation = mutation_insert_rand_rand(POP, POP, N, Ma, Manum, pm)
            # 对最优个体进行swap，基本没有效果
            # POP_mutation = mutation_swap_best(pop_best[fit_max.index(max(fit_max))], POP, N)
            # POP_mutation = mutation_neh_best(maxre_p, POP, N, M, P, D, A, B, Ma)
        # 交叉
        if action_choice <= 2:
            POP_crossover = crossover_pox(POP, POP_mutation, N, pc)
        else:
            POP_crossover = crossover_ppx(POP, POP_mutation, N, pc)
        # 解码
        S, E, O = decoding(POP_crossover, N, M, P, D, A, B)
        # 适应度
        Fit_crossover, ET_penalty_crossover = fitness(A, B, S, E, D)
        # 贪婪选择
        POP_new, Fit_POP_new, ET_penalty_POP_new = select(POP, POP_crossover, Fit_POP, ET_penalty_POP, Fit_crossover,
                                                          ET_penalty_crossover)
        # 找出最大的fitness
        maxre_f = copy.deepcopy(max(Fit_POP_new))
        h = Fit_POP_new.index(maxre_f)
        maxre_p = copy.deepcopy(POP_new[h])
        minre_et = copy.deepcopy(ET_penalty_POP_new[h])
        # 更新动作
        if len(action_list) < d:  # 时间窗大小为d
            action_list.append(copy.deepcopy(action_choice))
        else:
            action_list.pop(0)
            action_list.append(copy.deepcopy(action_choice))
        # print('action列表', action_list)

        if len(reward_list) < d:  # 时间窗大小为d
            reward_list.append(copy.deepcopy((np.mean(Fit_POP_new) - np.mean(Fit_POP))))
        else:
            reward_list.pop(0)
            reward_list.append(copy.deepcopy((np.mean(Fit_POP_new) - np.mean(Fit_POP))))
        # print('reward 列表', reward_list)

        # 对 个个体进行局部搜索
        Ps = ps_vnd * (g / 100) ** 2
        POP_VND_SIZE = int(POP_SIZE * Ps)  # 进行局部搜索的个体数量，随机选择个体进行局部搜索
        # print('POP_VND_SIZE', POP_VND_SIZE)
        # 找出最大的fitness
        # maxre_f = copy.deepcopy(max(Fit_POP_new))
        # h = copy.deepcopy(Fit_POP_new.index(maxre_f))
        # maxre_p = copy.deepcopy(POP_new[h])
        # minre_et = copy.deepcopy(ET_penalty_POP_new[h])
        # print('pls前', minre_et)
        # print(ET_penalty_POP_new)
        for vnd_i in range(POP_VND_SIZE):
            ran_vnd = np.random.randint(low=0, high=len(POP_new))
            pop_vnd = copy.deepcopy(POP_new[ran_vnd])
            et_pop_vnd = ET_penalty_POP_new[ran_vnd]
            # NE.II，NE.IS，NE.EI，NE.ES，NE.IGS和NE.SIGS 按照这个顺序探索
            stop_vnd = False
            k_vnd = 1
            while not stop_vnd:
                if k_vnd == 1:
                    # print('k_vnd == 1')
                    pop_vnd_re, et_vnd_re = NEII(pop_vnd, N, M, P, D, A, B)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 2:
                    # print('k_vnd == 2')
                    pop_vnd_re, et_vnd_re = NEIS(pop_vnd, N, M, P, D, A, B)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 3:
                    # print('k_vnd == 3')
                    pop_vnd_re, et_vnd_re = NEEI(pop_vnd, N, M, P, D, A, B, Ma)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 4:
                    # print('k_vnd == 4')
                    pop_vnd_re, et_vnd_re = NEES(pop_vnd, N, M, P, D, A, B, Ma)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 5:
                    # print('k_vnd == 5')
                    rj = 5
                    pop_vnd_re, et_vnd_re = NEIGS(pop_vnd, et_pop_vnd, rj, N, M, P, D, A, B, Ma)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 6:
                    # print('k_vnd == 6')
                    rjs = 1
                    pop_vnd_re, et_vnd_re = NESIGS(pop_vnd, et_pop_vnd, rjs, N, M, P, D, A, B, Ma)
                    if et_vnd_re < ET_penalty_POP_new[ran_vnd]:  # 有改进
                        k_vnd = 1
                    else:  # 没有改进
                        k_vnd += 1
                    POP_new[ran_vnd] = copy.deepcopy(pop_vnd_re)
                    ET_penalty_POP_new[ran_vnd] = et_vnd_re
                    Fit_POP_new[ran_vnd] = et_getfit(et_vnd_re)
                    pop_vnd = copy.deepcopy(pop_vnd_re)
                    et_pop_vnd = et_vnd_re
                if k_vnd == 7:
                    # print('stop')
                    stop_vnd = True
        maxre_f = copy.deepcopy(max(Fit_POP_new))
        h = copy.deepcopy(Fit_POP_new.index(maxre_f))
        maxre_p = copy.deepcopy(POP_new[h])
        minre_et = copy.deepcopy(ET_penalty_POP_new[h])
        # print('pls后', minre_et)
        if minre_et <= min(et_min):  # 记录当前最优解
            pop_best.append(maxre_p)
            et_min.append(minre_et)
            fit_max.append(maxre_f)
        else:
            pop_best.append(copy.deepcopy(pop_best[et_min.index(min(et_min))]))
            fit_max.append(copy.deepcopy(fit_max[et_min.index(min(et_min))]))
            et_min.append(copy.deepcopy(et_min[et_min.index(min(et_min))]))
        # print(ET_penalty_POP_new)
        # print(minre_et)
        g += 1
    time_end = time.time()
    print('time cost', time_end - time_start, 's')
    # # 绘图
    maxre_f = max(fit_max)
    h = fit_max.index(maxre_f)
    minre_et = copy.deepcopy(et_min[h])
    print('fit', maxre_f)
    print('et', minre_et)
    print('pop', pop_best[h])
    print('fit_max', fit_max)
    print('et_min', et_min)
    print('')
    #
    # 绘制迭代gen代最优个体fitness散点图
    # plt.figure()
    # x = range(len(fit_max))
    # y = fit_max
    # plt.scatter(x, y)
    # plt.title("fitness figure")
    # plt.xlabel("iteration")
    # plt.ylabel("fitness value")
    # plt.xticks(np.arange(0, len(fit_max), int(gen/10)), np.arange(0, len(fit_max), int(gen/10)))  # 替换x坐标
    # plt.show()
    #
    # # 绘制迭代gen代最优个体et_min散点图
    # plt.figure()
    # x = range(len(et_min))
    # y = et_min
    # plt.scatter(x, y)
    # plt.title("E/T penalty figure")
    # plt.xlabel("iteration")
    # plt.ylabel("penalty value")
    # plt.xticks(np.arange(0, len(et_min), int(gen/10)), np.arange(0, len(et_min), int(gen/10))) # 替换x坐标
    # plt.show()
    #
    # # 最优调度方案 绘制甘特图
    # gantt(pop_best[h], P, N, M, P, D, A, B)
print('跑完了')