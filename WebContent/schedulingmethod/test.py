from vnd_def import NE_choosem, get_m_et_all
import numpy as np

Lbn = [4, 4, 1, 1, 1, 3, 2, 1, 5, 1, 1, 4, 3, 5, 4, 1, 1, 4, 5, 1, 5, 1, 5, 4, 5, 2, 3, 4, 4, 5, 5, 5, 3, 2, 3, 4, 1, 4, 5, 5, 1, 5, 3, 2, 5, 1, 5, 5, 1, 2]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5]]
A = [10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 2, 2, 2, 10, 10, 2, 2, 10, 2, 10, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 2, 2, 2, 2]
B = [5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 1, 1, 5, 5, 1, 1, 5, 1, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 1, 1, 1]
P = [[999, 999, 999, 58, 999, 999, 999, 18, 23, 78], [999, 999, 999, 100, 999, 999, 999, 69, 48, 11], [94, 999, 999, 999, 999, 67, 999, 999, 999, 86], [97, 999, 999, 999, 999, 65, 999, 999, 999, 15], [16, 999, 999, 999, 999, 50, 999, 999, 999, 25], [999, 999, 68, 999, 999, 999, 67, 99, 999, 41], [999, 17, 999, 999, 999, 36, 44, 999, 999, 53], [48, 999, 999, 999, 999, 97, 999, 999, 999, 37], [999, 999, 999, 999, 39, 999, 999, 999, 100, 90], [85, 999, 999, 999, 999, 58, 999, 999, 999, 35], [99, 999, 999, 999, 999, 43, 999, 999, 999, 30], [999, 999, 999, 51, 999, 999, 999, 58, 42, 60], [999, 999, 11, 999, 999, 999, 14, 79, 999, 86], [999, 999, 999, 999, 73, 999, 999, 999, 99, 28], [999, 999, 999, 50, 999, 999, 999, 79, 64, 33], [62, 999, 999, 999, 999, 35, 999, 999, 999, 54], [11, 999, 999, 999, 999, 84, 999, 999, 999, 74], [999, 999, 999, 39, 999, 999, 999, 29, 69, 58], [999, 999, 999, 999, 39, 999, 999, 999, 26, 67], [94, 999, 999, 999, 999, 69, 999, 999, 999, 42], [999, 999, 999, 999, 35, 999, 999, 999, 60, 94], [30, 999, 999, 999, 999, 37, 999, 999, 999, 21], [999, 999, 999, 999, 44, 999, 999, 999, 87, 88], [999, 999, 999, 92, 999, 999, 999, 42, 55, 54], [999, 999, 999, 999, 41, 999, 999, 999, 14, 91], [999, 43, 999, 999, 999, 95, 25, 999, 999, 18], [999, 999, 57, 999, 999, 999, 32, 94, 999, 62], [999, 999, 999, 43, 999, 999, 999, 42, 21, 26], [999, 999, 999, 57, 999, 999, 999, 72, 79, 37], [999, 999, 999, 999, 33, 999, 999, 999, 70, 64], [999, 999, 999, 999, 77, 999, 999, 999, 13, 25], [999, 999, 999, 999, 100, 999, 999, 999, 100, 67], [999, 999, 90, 999, 999, 999, 48, 85, 999, 24], [999, 40, 999, 999, 999, 54, 66, 999, 999, 79], [999, 999, 89, 999, 999, 999, 82, 16, 999, 31], [999, 999, 999, 64, 999, 999, 999, 69, 69, 40], [37, 999, 999, 999, 999, 66, 999, 999, 999, 100], [999, 999, 999, 66, 999, 999, 999, 87, 15, 41], [999, 999, 999, 999, 48, 999, 999, 999, 94, 10], [999, 999, 999, 999, 30, 999, 999, 999, 27, 92], [76, 999, 999, 999, 999, 35, 999, 999, 999, 12], [999, 999, 999, 999, 76, 999, 999, 999, 63, 47], [999, 999, 53, 999, 999, 999, 37, 92, 999, 62], [999, 69, 999, 999, 999, 90, 46, 999, 999, 83], [999, 999, 999, 999, 86, 999, 999, 999, 78, 66], [47, 999, 999, 999, 999, 19, 999, 999, 999, 89], [999, 999, 999, 999, 93, 999, 999, 999, 14, 100], [999, 999, 999, 999, 73, 999, 999, 999, 35, 15], [57, 999, 999, 999, 999, 23, 999, 999, 999, 58], [999, 100, 999, 999, 999, 70, 14, 999, 999, 68]]
D = [[341, 414], [209, 222], [202, 279], [41, 116], [191, 237], [154, 256], [223, 295], [51, 130], [83, 141], [114, 193], [234, 328], [149, 227], [177, 270], [198, 317], [197, 275], [285, 355], [285, 368], [303, 335], [334, 386], [328, 421], [221, 284], [276, 314], [232, 294], [182, 254], [209, 311], [165, 284], [84, 145], [172, 207], [215, 290], [30, 112], [244, 310], [84, 191], [129, 216], [142, 190], [243, 277], [110, 177], [263, 337], [90, 143], [240, 315], [83, 180], [21, 61], [83, 141], [14, 66], [232, 284], [3, 72], [234, 281], [319, 386], [111, 131], [152, 205], [67, 204]]


M = len(Lbm)  # 机器数
N = len(Lbn)  # 工件数
Ma = [[] for _ in range(N)]  # 每个零件可以使用的机器
Manum = np.zeros(N, dtype=np.int)  # 每个零件可以使用的机器数量
for n1 in range(N):  # 对于每个工件，计算Ma
    lbn = Lbn[n1]  # 这个工件在哪个类别的机器上加工
    for m in range(M):  # 每一个机器
        lbm = Lbm[m]  # lbm 机器m可以加工的类别
        i = 0
        lbmnum = len(Lbm[m])
        for l in range(lbmnum):  # 对于机器的每一个类别
            if lbm[i] == lbn:
                Ma[n1].append(m + 1)
                Manum[n1] += 1
                break
            i += 1
pop = [38, 12, 45, 4, 43, 50, 42, 32, 2, 15, 39, 14, 48, 40, 22, 20, 8, 5, 46, 17, 34, 7, 28, 21, 31, 37, 25, 30, 9, 23, 47, 19, 1, 36, 41, 13, 6, 24, 35, 18, 10, 49, 3, 11, 29, 26, 27, 33, 44, 16, 9, 8, 10, 10, 7, 7, 10, 10, 10, 10, 10, 10, 9, 9, 10, 10, 1, 1, 1, 1, 2, 2, 9, 9, 9, 1, 9, 5, 5, 5, 9, 9, 9, 4, 6, 3, 3, 8, 8, 8, 6, 6, 6, 6, 4, 2, 7, 7, 7, 6]
ET_ne_m_all_list = get_m_et_all(M, N, P, D, A, B, pop)
print(ET_ne_m_all_list)