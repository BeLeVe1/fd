import numpy as np
import copy
import matplotlib.pyplot as plt

from action_choose_def import action_choose
from initial_def import initial, reinitial_swap, reinitial_insert, initial_ran
from fitness_def import fitness, et_getfit
from decoding_def import decoding, decoding_
from crossover_def import crossover_pox, crossover_ppx, crossover_bin
from pls_def import pls, dc, insertimprovement
from select_def import select, select_sa
from mutation_def import mutation_neh_best, mutation_2, mutation_3, mutation_swap_best, mutation_swap_rand, \
    mutation_insert_best_rand, mutation_insert_rand_rand, mutation_rand_pox
from gantt_def import gantt
import time
import math
from individual_density_def import individual_density
from vnd_def import NEII, NEIS, NEEI, NEES, NEIGS, NESIGS



# 超启发式选择算子
# 对10%的个体进行dc
# 考虑提前/拖后
# 考虑时间窗
# 差分算法

# 1
# T= 0.1
# RDD= 1.2
# R= 0.2
Lbn = [3, 5, 1, 5, 4, 4, 2, 4, 5, 2, 4, 4, 3, 3, 4, 2, 2, 1, 5, 4, 2, 5, 1, 5, 1, 2, 1, 1, 2, 4, 4, 5, 5, 4, 3, 3, 2, 1, 3, 4, 5, 2, 2, 2, 5, 5, 5, 5, 4, 1]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]
A = [8, 8, 2, 6, 2, 6, 10, 6, 4, 10, 2, 4, 10, 6, 4, 6, 8, 4, 10, 2, 2, 8, 2, 8, 10, 2, 2, 4, 8, 4, 2, 8, 4, 10, 6, 6, 6, 10, 4, 4, 10, 2, 8, 2, 8, 4, 2, 4, 4, 4]
B = [4, 4, 1, 3, 1, 3, 5, 3, 2, 5, 1, 2, 5, 3, 2, 3, 4, 2, 5, 1, 1, 4, 1, 4, 5, 1, 1, 2, 4, 2, 1, 4, 2, 5, 3, 3, 3, 5, 2, 2, 5, 1, 4, 1, 4, 2, 1, 2, 2, 2]
P = [[999, 999, 59, 999, 999, 999, 84, 17, 999, 999], [999, 999, 999, 999, 58, 999, 999, 999, 14, 89], [47, 999, 999, 999, 999, 43, 999, 999, 999, 94], [999, 999, 999, 999, 65, 999, 999, 999, 72, 10], [999, 999, 999, 11, 999, 999, 999, 79, 47, 999], [999, 999, 999, 68, 999, 999, 999, 57, 29, 999], [999, 65, 999, 999, 999, 53, 35, 999, 999, 999], [999, 999, 999, 63, 999, 999, 999, 81, 13, 999], [999, 999, 999, 999, 91, 999, 999, 999, 89, 34], [999, 86, 999, 999, 999, 21, 14, 999, 999, 999], [999, 999, 999, 71, 999, 999, 999, 88, 45, 999], [999, 999, 999, 63, 999, 999, 999, 90, 74, 999], [999, 999, 42, 999, 999, 999, 26, 31, 999, 999], [999, 999, 21, 999, 999, 999, 34, 12, 999, 999], [999, 999, 999, 21, 999, 999, 999, 35, 36, 999], [999, 79, 999, 999, 999, 19, 50, 999, 999, 999], [999, 21, 999, 999, 999, 27, 34, 999, 999, 999], [78, 999, 999, 999, 999, 89, 999, 999, 999, 68], [999, 999, 999, 999, 55, 999, 999, 999, 21, 67], [999, 999, 999, 74, 999, 999, 999, 62, 73, 999], [999, 56, 999, 999, 999, 77, 88, 999, 999, 999], [999, 999, 999, 999, 46, 999, 999, 999, 93, 47], [14, 999, 999, 999, 999, 70, 999, 999, 999, 81], [999, 999, 999, 999, 36, 999, 999, 999, 53, 99], [25, 999, 999, 999, 999, 58, 999, 999, 999, 90], [999, 67, 999, 999, 999, 39, 41, 999, 999, 999], [96, 999, 999, 999, 999, 81, 999, 999, 999, 82], [74, 999, 999, 999, 999, 52, 999, 999, 999, 15], [999, 16, 999, 999, 999, 62, 23, 999, 999, 999], [999, 999, 999, 90, 999, 999, 999, 81, 54, 999], [999, 999, 999, 94, 999, 999, 999, 42, 62, 999], [999, 999, 999, 999, 18, 999, 999, 999, 63, 99], [999, 999, 999, 999, 81, 999, 999, 999, 65, 54], [999, 999, 999, 68, 999, 999, 999, 34, 51, 999], [999, 999, 88, 999, 999, 999, 29, 71, 999, 999], [999, 999, 58, 999, 999, 999, 21, 85, 999, 999], [999, 76, 999, 999, 999, 90, 17, 999, 999, 999], [84, 999, 999, 999, 999, 57, 999, 999, 999, 92], [999, 999, 71, 999, 999, 999, 74, 45, 999, 999], [999, 999, 999, 74, 999, 999, 999, 61, 90, 999], [999, 999, 999, 999, 60, 999, 999, 999, 16, 68], [999, 12, 999, 999, 999, 72, 61, 999, 999, 999], [999, 93, 999, 999, 999, 29, 37, 999, 999, 999], [999, 100, 999, 999, 999, 77, 11, 999, 999, 999], [999, 999, 999, 999, 29, 999, 999, 999, 98, 90], [999, 999, 999, 999, 12, 999, 999, 999, 90, 79], [999, 999, 999, 999, 79, 999, 999, 999, 40, 70], [999, 999, 999, 999, 40, 999, 999, 999, 70, 44], [999, 999, 999, 81, 999, 999, 999, 52, 39, 999], [80, 999, 999, 999, 999, 38, 999, 999, 999, 82]]
D = [[157, 254], [262, 307], [105, 216], [412, 429], [320, 344], [132, 179], [329, 385], [240, 266], [361, 457], [164, 260], [61, 142], [267, 372], [380, 413], [369, 399], [288, 320], [339, 401], [195, 233], [340, 437], [336, 357], [379, 454], [60, 139], [187, 296], [282, 351], [352, 447], [328, 391], [229, 286], [167, 265], [277, 319], [322, 376], [126, 220], [139, 203], [343, 403], [212, 278], [299, 348], [292, 335], [162, 204], [344, 371], [217, 303], [373, 418], [331, 424], [279, 329], [140, 206], [160, 238], [249, 353], [369, 446], [394, 422], [245, 291], [319, 372], [363, 446], [354, 414]]
# 2
#　T= 0.1
# RDD= 1.2
# R= 0.4
Lbn = [1, 1, 3, 3, 3, 3, 4, 3, 1, 3, 5, 3, 1, 1, 4, 4, 2, 2, 3, 1, 1, 4, 5, 4, 1, 2, 1, 5, 2, 5, 3, 5, 4, 3, 1, 1, 1, 1, 5, 1, 4, 5, 1, 4, 2, 2, 1, 1, 1, 3]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]
A = [10, 2, 8, 10, 2, 8, 4, 4, 8, 2, 10, 6, 10, 8, 8, 4, 10, 4, 4, 6, 4, 4, 8, 10, 8, 10, 2, 6, 2, 4, 2, 8, 2, 6, 8, 6, 10, 2, 6, 8, 6, 6, 6, 4, 8, 10, 4, 8, 8, 8]
B = [5, 1, 4, 5, 1, 4, 2, 2, 4, 1, 5, 3, 5, 4, 4, 2, 5, 2, 2, 3, 2, 2, 4, 5, 4, 5, 1, 3, 1, 2, 1, 4, 1, 3, 4, 3, 5, 1, 3, 4, 3, 3, 3, 2, 4, 5, 2, 4, 4, 4]
P = [[19, 999, 999, 999, 999, 60, 999, 999, 999, 51], [51, 999, 999, 999, 999, 31, 999, 999, 999, 63], [999, 999, 38, 999, 999, 999, 11, 95, 999, 999], [999, 999, 65, 999, 999, 999, 31, 19, 999, 999], [999, 999, 17, 999, 999, 999, 19, 42, 999, 999], [999, 999, 33, 999, 999, 999, 21, 29, 999, 999], [999, 999, 999, 19, 999, 999, 999, 100, 91, 999], [999, 999, 68, 999, 999, 999, 76, 41, 999, 999], [99, 999, 999, 999, 999, 48, 999, 999, 999, 24], [999, 999, 39, 999, 999, 999, 14, 63, 999, 999], [999, 999, 999, 999, 10, 999, 999, 999, 29, 68], [999, 999, 76, 999, 999, 999, 66, 13, 999, 999], [51, 999, 999, 999, 999, 10, 999, 999, 999, 15], [42, 999, 999, 999, 999, 54, 999, 999, 999, 28], [999, 999, 999, 37, 999, 999, 999, 61, 67, 999], [999, 999, 999, 65, 999, 999, 999, 71, 91, 999], [999, 10, 999, 999, 999, 64, 37, 999, 999, 999], [999, 62, 999, 999, 999, 17, 93, 999, 999, 999], [999, 999, 64, 999, 999, 999, 74, 43, 999, 999], [60, 999, 999, 999, 999, 20, 999, 999, 999, 51], [50, 999, 999, 999, 999, 93, 999, 999, 999, 87], [999, 999, 999, 89, 999, 999, 999, 53, 79, 999], [999, 999, 999, 999, 74, 999, 999, 999, 21, 42], [999, 999, 999, 60, 999, 999, 999, 13, 92, 999], [57, 999, 999, 999, 999, 95, 999, 999, 999, 76], [999, 34, 999, 999, 999, 89, 90, 999, 999, 999], [80, 999, 999, 999, 999, 13, 999, 999, 999, 90], [999, 999, 999, 999, 11, 999, 999, 999, 63, 63], [999, 31, 999, 999, 999, 25, 98, 999, 999, 999], [999, 999, 999, 999, 18, 999, 999, 999, 22, 100], [999, 999, 43, 999, 999, 999, 60, 34, 999, 999], [999, 999, 999, 999, 50, 999, 999, 999, 42, 95], [999, 999, 999, 60, 999, 999, 999, 76, 70, 999], [999, 999, 48, 999, 999, 999, 38, 70, 999, 999], [85, 999, 999, 999, 999, 79, 999, 999, 999, 88], [11, 999, 999, 999, 999, 36, 999, 999, 999, 37], [27, 999, 999, 999, 999, 67, 999, 999, 999, 29], [49, 999, 999, 999, 999, 100, 999, 999, 999, 29], [999, 999, 999, 999, 92, 999, 999, 999, 17, 79], [29, 999, 999, 999, 999, 96, 999, 999, 999, 61], [999, 999, 999, 85, 999, 999, 999, 79, 48, 999], [999, 999, 999, 999, 69, 999, 999, 999, 65, 53], [72, 999, 999, 999, 999, 52, 999, 999, 999, 49], [999, 999, 999, 74, 999, 999, 999, 93, 47, 999], [999, 54, 999, 999, 999, 36, 82, 999, 999, 999], [999, 11, 999, 999, 999, 80, 11, 999, 999, 999], [23, 999, 999, 999, 999, 94, 999, 999, 999, 30], [35, 999, 999, 999, 999, 11, 999, 999, 999, 84], [72, 999, 999, 999, 999, 58, 999, 999, 999, 77], [999, 999, 44, 999, 999, 999, 13, 35, 999, 999]]
D = [[367, 396], [289, 376], [263, 325], [215, 278], [217, 236], [157, 196], [345, 392], [88, 151], [156, 284], [376, 391], [102, 137], [346, 380], [96, 125], [232, 271], [123, 214], [345, 424], [286, 349], [306, 326], [262, 305], [325, 389], [265, 338], [348, 401], [58, 139], [108, 221], [120, 190], [156, 271], [212, 244], [286, 317], [226, 339], [64, 171], [207, 244], [338, 441], [275, 343], [326, 410], [206, 308], [356, 388], [184, 223], [176, 292], [99, 162], [157, 219], [299, 350], [330, 391], [206, 270], [63, 119], [74, 115], [129, 240], [195, 222], [245, 313], [343, 433], [267, 312]]
# 3
# T= 0.1
# RDD= 1.4
# R= 0.2
Lbn = [3, 2, 1, 3, 5, 5, 4, 4, 3, 1, 5, 3, 1, 5, 1, 4, 3, 4, 1, 2, 5, 5, 3, 5, 2, 2, 4, 2, 2, 2, 4, 3, 2, 3, 2, 3, 1, 2, 1, 3, 4, 4, 3, 1, 3, 4, 5, 5, 1, 3]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]
A = [8, 8, 2, 2, 6, 8, 2, 10, 2, 10, 2, 10, 8, 6, 6, 4, 10, 2, 4, 10, 2, 10, 2, 4, 2, 2, 2, 10, 6, 2, 2, 2, 2, 4, 2, 10, 2, 8, 8, 8, 10, 2, 4, 8, 4, 4, 4, 6, 2, 10]
B = [4, 4, 1, 1, 3, 4, 1, 5, 1, 5, 1, 5, 4, 3, 3, 2, 5, 1, 2, 5, 1, 5, 1, 2, 1, 1, 1, 5, 3, 1, 1, 1, 1, 2, 1, 5, 1, 4, 4, 4, 5, 1, 2, 4, 2, 2, 2, 3, 1, 5]
P = [[999, 999, 45, 999, 999, 999, 29, 96, 999, 999], [999, 87, 999, 999, 999, 84, 10, 999, 999, 999], [18, 999, 999, 999, 999, 69, 999, 999, 999, 91], [999, 999, 98, 999, 999, 999, 33, 61, 999, 999], [999, 999, 999, 999, 77, 999, 999, 999, 78, 48], [999, 999, 999, 999, 25, 999, 999, 999, 95, 78], [999, 999, 999, 86, 999, 999, 999, 57, 65, 999], [999, 999, 999, 94, 999, 999, 999, 85, 66, 999], [999, 999, 28, 999, 999, 999, 23, 78, 999, 999], [78, 999, 999, 999, 999, 86, 999, 999, 999, 72], [999, 999, 999, 999, 36, 999, 999, 999, 81, 60], [999, 999, 59, 999, 999, 999, 26, 98, 999, 999], [13, 999, 999, 999, 999, 28, 999, 999, 999, 44], [999, 999, 999, 999, 88, 999, 999, 999, 90, 22], [100, 999, 999, 999, 999, 59, 999, 999, 999, 46], [999, 999, 999, 95, 999, 999, 999, 37, 51, 999], [999, 999, 100, 999, 999, 999, 86, 39, 999, 999], [999, 999, 999, 44, 999, 999, 999, 18, 59, 999], [41, 999, 999, 999, 999, 15, 999, 999, 999, 61], [999, 65, 999, 999, 999, 59, 66, 999, 999, 999], [999, 999, 999, 999, 71, 999, 999, 999, 89, 35], [999, 999, 999, 999, 99, 999, 999, 999, 47, 31], [999, 999, 97, 999, 999, 999, 29, 33, 999, 999], [999, 999, 999, 999, 51, 999, 999, 999, 11, 17], [999, 49, 999, 999, 999, 39, 12, 999, 999, 999], [999, 28, 999, 999, 999, 21, 37, 999, 999, 999], [999, 999, 999, 59, 999, 999, 999, 87, 30, 999], [999, 37, 999, 999, 999, 62, 27, 999, 999, 999], [999, 56, 999, 999, 999, 44, 15, 999, 999, 999], [999, 90, 999, 999, 999, 53, 64, 999, 999, 999], [999, 999, 999, 85, 999, 999, 999, 100, 29, 999], [999, 999, 68, 999, 999, 999, 55, 13, 999, 999], [999, 12, 999, 999, 999, 25, 47, 999, 999, 999], [999, 999, 14, 999, 999, 999, 11, 30, 999, 999], [999, 55, 999, 999, 999, 28, 79, 999, 999, 999], [999, 999, 51, 999, 999, 999, 78, 48, 999, 999], [84, 999, 999, 999, 999, 76, 999, 999, 999, 16], [999, 69, 999, 999, 999, 73, 36, 999, 999, 999], [75, 999, 999, 999, 999, 46, 999, 999, 999, 39], [999, 999, 51, 999, 999, 999, 20, 89, 999, 999], [999, 999, 999, 87, 999, 999, 999, 18, 43, 999], [999, 999, 999, 70, 999, 999, 999, 65, 66, 999], [999, 999, 95, 999, 999, 999, 53, 48, 999, 999], [85, 999, 999, 999, 999, 67, 999, 999, 999, 45], [999, 999, 70, 999, 999, 999, 47, 89, 999, 999], [999, 999, 999, 55, 999, 999, 999, 13, 51, 999], [999, 999, 999, 999, 67, 999, 999, 999, 42, 34], [999, 999, 999, 999, 65, 999, 999, 999, 45, 15], [15, 999, 999, 999, 999, 41, 999, 999, 999, 84], [999, 999, 54, 999, 999, 999, 42, 36, 999, 999]]
D = [[354, 384], [196, 262], [148, 172], [402, 456], [185, 238], [232, 279], [298, 356], [31, 100], [312, 388], [327, 399], [38, 133], [157, 238], [181, 230], [30, 91], [213, 289], [392, 466], [338, 401], [290, 316], [60, 89], [158, 233], [368, 421], [302, 367], [367, 471], [118, 165], [413, 446], [342, 383], [166, 213], [231, 263], [95, 145], [283, 351], [62, 94], [295, 324], [127, 168], [49, 79], [377, 425], [289, 378], [317, 396], [397, 448], [192, 239], [70, 140], [196, 293], [268, 350], [170, 221], [193, 239], [301, 381], [420, 441], [169, 247], [342, 414], [210, 278], [268, 318]]
# 8
Lbn = [5, 5, 3, 3, 1, 5, 2, 2, 5, 4, 2, 3, 5, 4, 4, 5, 1, 2, 5, 5, 1, 3, 3, 1, 2, 5, 5, 5, 1, 2, 3, 5, 4, 3, 5, 1, 1, 5,
       5, 4, 2, 1, 3, 5, 1, 3, 3, 1, 4, 2]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]
A = [10, 10, 4, 6, 2, 10, 2, 10, 4, 6, 2, 4, 10, 6, 10, 4, 2, 10, 8, 4, 2, 6, 4, 10, 6, 10, 8, 6, 10, 10, 4, 6, 10, 4,
     6, 2, 2, 8, 8, 10, 4, 4, 8, 8, 6, 6, 10, 6, 8, 6]
B = [5, 5, 2, 3, 1, 5, 1, 5, 2, 3, 1, 2, 5, 3, 5, 2, 1, 5, 4, 2, 1, 3, 2, 5, 3, 5, 4, 3, 5, 5, 2, 3, 5, 2, 3, 1, 1, 4,
     4, 5, 2, 2, 4, 4, 3, 3, 5, 3, 4, 3]
P = [[999, 999, 999, 999, 91, 999, 999, 999, 38, 63], [999, 999, 999, 999, 34, 999, 999, 999, 41, 16],
     [999, 999, 11, 999, 999, 999, 24, 79, 999, 999], [999, 999, 87, 999, 999, 999, 99, 82, 999, 999],
     [72, 999, 999, 999, 999, 71, 999, 999, 999, 89], [999, 999, 999, 999, 79, 999, 999, 999, 80, 17],
     [999, 56, 999, 999, 999, 64, 10, 999, 999, 999], [999, 77, 999, 999, 999, 45, 65, 999, 999, 999],
     [999, 999, 999, 999, 83, 999, 999, 999, 80, 41], [999, 999, 999, 100, 999, 999, 999, 50, 44, 999],
     [999, 97, 999, 999, 999, 50, 81, 999, 999, 999], [999, 999, 30, 999, 999, 999, 25, 98, 999, 999],
     [999, 999, 999, 999, 46, 999, 999, 999, 28, 50], [999, 999, 999, 76, 999, 999, 999, 31, 84, 999],
     [999, 999, 999, 65, 999, 999, 999, 93, 38, 999], [999, 999, 999, 999, 13, 999, 999, 999, 14, 85],
     [84, 999, 999, 999, 999, 86, 999, 999, 999, 96], [999, 94, 999, 999, 999, 66, 78, 999, 999, 999],
     [999, 999, 999, 999, 30, 999, 999, 999, 34, 44], [999, 999, 999, 999, 51, 999, 999, 999, 39, 18],
     [45, 999, 999, 999, 999, 34, 999, 999, 999, 85], [999, 999, 73, 999, 999, 999, 42, 80, 999, 999],
     [999, 999, 94, 999, 999, 999, 21, 63, 999, 999], [28, 999, 999, 999, 999, 18, 999, 999, 999, 37],
     [999, 90, 999, 999, 999, 28, 39, 999, 999, 999], [999, 999, 999, 999, 60, 999, 999, 999, 42, 12],
     [999, 999, 999, 999, 40, 999, 999, 999, 25, 23], [999, 999, 999, 999, 54, 999, 999, 999, 28, 34],
     [65, 999, 999, 999, 999, 53, 999, 999, 999, 15], [999, 61, 999, 999, 999, 73, 86, 999, 999, 999],
     [999, 999, 48, 999, 999, 999, 23, 30, 999, 999], [999, 999, 999, 999, 45, 999, 999, 999, 78, 74],
     [999, 999, 999, 14, 999, 999, 999, 69, 18, 999], [999, 999, 42, 999, 999, 999, 32, 77, 999, 999],
     [999, 999, 999, 999, 66, 999, 999, 999, 100, 32], [19, 999, 999, 999, 999, 57, 999, 999, 999, 42],
     [36, 999, 999, 999, 999, 56, 999, 999, 999, 13], [999, 999, 999, 999, 30, 999, 999, 999, 81, 93],
     [999, 999, 999, 999, 19, 999, 999, 999, 75, 47], [999, 999, 999, 13, 999, 999, 999, 83, 23, 999],
     [999, 81, 999, 999, 999, 24, 36, 999, 999, 999], [90, 999, 999, 999, 999, 75, 999, 999, 999, 26],
     [999, 999, 47, 999, 999, 999, 74, 41, 999, 999], [999, 999, 999, 999, 46, 999, 999, 999, 24, 77],
     [26, 999, 999, 999, 999, 85, 999, 999, 999, 22], [999, 999, 71, 999, 999, 999, 28, 88, 999, 999],
     [999, 999, 81, 999, 999, 999, 87, 78, 999, 999], [85, 999, 999, 999, 999, 35, 999, 999, 999, 67],
     [999, 999, 999, 59, 999, 999, 999, 32, 39, 999], [999, 16, 999, 999, 999, 47, 21, 999, 999, 999]]
D = [[85, 161], [96, 127], [136, 243], [78, 189], [206, 294], [334, 409], [246, 279], [84, 186], [196, 289], [164, 292],
     [162, 246], [54, 147], [11, 80], [215, 322], [164, 255], [41, 85], [201, 316], [125, 210], [173, 219], [216, 284],
     [157, 192], [14, 101], [115, 227], [44, 74], [228, 337], [94, 109], [106, 139], [336, 366], [237, 326], [83, 181],
     [334, 383], [188, 255], [44, 70], [246, 345], [61, 113], [341, 361], [206, 246], [268, 359], [269, 344],
     [116, 188], [72, 143], [3, 119], [32, 125], [303, 330], [291, 349], [338, 383], [195, 310], [221, 301], [105, 157],
     [62, 88]]

Lbn = [4, 4, 1, 1, 1, 3, 2, 1, 5, 1, 1, 4, 3, 5, 4, 1, 1, 4, 5, 1, 5, 1, 5, 4, 5, 2, 3, 4, 4, 5, 5, 5, 3, 2, 3, 4, 1, 4, 5, 5, 1, 5, 3, 2, 5, 1, 5, 5, 1, 2]
Lbm = [[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1, 2, 3, 4, 5]]
A = [10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 2, 2, 2, 10, 10, 2, 2, 10, 2, 10, 2, 2, 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 10, 2, 2, 2, 2]
B = [5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 1, 1, 5, 5, 1, 1, 5, 1, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 1, 1, 1]
P = [[999, 999, 999, 58, 999, 999, 999, 18, 23, 78], [999, 999, 999, 100, 999, 999, 999, 69, 48, 11], [94, 999, 999, 999, 999, 67, 999, 999, 999, 86], [97, 999, 999, 999, 999, 65, 999, 999, 999, 15], [16, 999, 999, 999, 999, 50, 999, 999, 999, 25], [999, 999, 68, 999, 999, 999, 67, 99, 999, 41], [999, 17, 999, 999, 999, 36, 44, 999, 999, 53], [48, 999, 999, 999, 999, 97, 999, 999, 999, 37], [999, 999, 999, 999, 39, 999, 999, 999, 100, 90], [85, 999, 999, 999, 999, 58, 999, 999, 999, 35], [99, 999, 999, 999, 999, 43, 999, 999, 999, 30], [999, 999, 999, 51, 999, 999, 999, 58, 42, 60], [999, 999, 11, 999, 999, 999, 14, 79, 999, 86], [999, 999, 999, 999, 73, 999, 999, 999, 99, 28], [999, 999, 999, 50, 999, 999, 999, 79, 64, 33], [62, 999, 999, 999, 999, 35, 999, 999, 999, 54], [11, 999, 999, 999, 999, 84, 999, 999, 999, 74], [999, 999, 999, 39, 999, 999, 999, 29, 69, 58], [999, 999, 999, 999, 39, 999, 999, 999, 26, 67], [94, 999, 999, 999, 999, 69, 999, 999, 999, 42], [999, 999, 999, 999, 35, 999, 999, 999, 60, 94], [30, 999, 999, 999, 999, 37, 999, 999, 999, 21], [999, 999, 999, 999, 44, 999, 999, 999, 87, 88], [999, 999, 999, 92, 999, 999, 999, 42, 55, 54], [999, 999, 999, 999, 41, 999, 999, 999, 14, 91], [999, 43, 999, 999, 999, 95, 25, 999, 999, 18], [999, 999, 57, 999, 999, 999, 32, 94, 999, 62], [999, 999, 999, 43, 999, 999, 999, 42, 21, 26], [999, 999, 999, 57, 999, 999, 999, 72, 79, 37], [999, 999, 999, 999, 33, 999, 999, 999, 70, 64], [999, 999, 999, 999, 77, 999, 999, 999, 13, 25], [999, 999, 999, 999, 100, 999, 999, 999, 100, 67], [999, 999, 90, 999, 999, 999, 48, 85, 999, 24], [999, 40, 999, 999, 999, 54, 66, 999, 999, 79], [999, 999, 89, 999, 999, 999, 82, 16, 999, 31], [999, 999, 999, 64, 999, 999, 999, 69, 69, 40], [37, 999, 999, 999, 999, 66, 999, 999, 999, 100], [999, 999, 999, 66, 999, 999, 999, 87, 15, 41], [999, 999, 999, 999, 48, 999, 999, 999, 94, 10], [999, 999, 999, 999, 30, 999, 999, 999, 27, 92], [76, 999, 999, 999, 999, 35, 999, 999, 999, 12], [999, 999, 999, 999, 76, 999, 999, 999, 63, 47], [999, 999, 53, 999, 999, 999, 37, 92, 999, 62], [999, 69, 999, 999, 999, 90, 46, 999, 999, 83], [999, 999, 999, 999, 86, 999, 999, 999, 78, 66], [47, 999, 999, 999, 999, 19, 999, 999, 999, 89], [999, 999, 999, 999, 93, 999, 999, 999, 14, 100], [999, 999, 999, 999, 73, 999, 999, 999, 35, 15], [57, 999, 999, 999, 999, 23, 999, 999, 999, 58], [999, 100, 999, 999, 999, 70, 14, 999, 999, 68]]
D = [[341, 414], [209, 222], [202, 279], [41, 116], [191, 237], [154, 256], [223, 295], [51, 130], [83, 141], [114, 193], [234, 328], [149, 227], [177, 270], [198, 317], [197, 275], [285, 355], [285, 368], [303, 335], [334, 386], [328, 421], [221, 284], [276, 314], [232, 294], [182, 254], [209, 311], [165, 284], [84, 145], [172, 207], [215, 290], [30, 112], [244, 310], [84, 191], [129, 216], [142, 190], [243, 277], [110, 177], [263, 337], [90, 143], [240, 315], [83, 180], [21, 61], [83, 141], [14, 66], [232, 284], [3, 72], [234, 281], [319, 386], [111, 131], [152, 205], [67, 204]]


M = len(Lbm)  # 机器数
N = len(Lbn)  # 工件数
Ma = [[] for _ in range(N)]  # 每个零件可以使用的机器
Manum = np.zeros(N, dtype=np.int)  # 每个零件可以使用的机器数量
for n1 in range(N):  # 对于每个工件，计算Ma
    lbn = Lbn[n1]  # 这个工件在哪个类别的机器上加工
    for m in range(M):  # 每一个机器
        lbm = Lbm[m]  # lbm 机器m可以加工的类别
        i = 0
        lbmnum = len(Lbm[m])
        for l in range(lbmnum):  # 对于机器的每一个类别
            if lbm[i] == lbn:
                Ma[n1].append(m + 1)
                Manum[n1] += 1
                break
            i += 1

# 5个月台
gen = 150  # 迭代次数
POP_SIZE = 50  # 种群数量
d = 30  # 滑动时间窗
ps_vnd = 0.15  # 变邻域下降参数
pm = 0.6
pc = 0.9
# 3个月台
# gen = 100  # 迭代次数
# POP_SIZE = 20  # 种群数量
# 初始化种群
POP_new = initial(M, N, Ma, Manum, 2, D, P, A, B)
S, E, O = decoding(POP_new, N, M, P, D, A, B)
# 适应度
Fit_POP_new, ET_penalty_POP_new = fitness(A, B, S, E, D)
pop_vnd = copy.deepcopy(POP_new[0])
et_pop_vnd = ET_penalty_POP_new[0]
# NE.II，NE.IS，NE.EI，NE.ES，NE.IGS和NE.SIGS 按照这个顺序探索
g = 0
while g < 100:
    print(g)
    stop_vnd = False
    k_vnd = 1
    while not stop_vnd:
        if k_vnd == 1:
            # print('k_vnd == 1')
            pop_vnd_re, et_vnd_re = NEII(pop_vnd, N, M, P, D, A, B)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 2:
            # print('k_vnd == 2')
            pop_vnd_re, et_vnd_re = NEIS(pop_vnd, N, M, P, D, A, B)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 3:
            # print('k_vnd == 3')
            pop_vnd_re, et_vnd_re = NEEI(pop_vnd, N, M, P, D, A, B, Ma)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 4:
            # print('k_vnd == 4')
            pop_vnd_re, et_vnd_re = NEES(pop_vnd, N, M, P, D, A, B, Ma)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 5:
            # print('k_vnd == 5')
            rj = 5
            pop_vnd_re, et_vnd_re = NEIGS(pop_vnd, et_pop_vnd, rj, N, M, P, D, A, B, Ma)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 6:
            # print('k_vnd == 6')
            rjs = 1
            pop_vnd_re, et_vnd_re = NESIGS(pop_vnd, et_pop_vnd, rjs, N, M, P, D, A, B, Ma)
            if et_vnd_re < ET_penalty_POP_new[0]:  # 有改进
                k_vnd = 1
            else:  # 没有改进
                k_vnd += 1
            POP_new[0] = copy.deepcopy(pop_vnd_re)
            ET_penalty_POP_new[0] = et_vnd_re
            Fit_POP_new[0] = et_getfit(et_vnd_re)
            pop_vnd = copy.deepcopy(pop_vnd_re)
            et_pop_vnd = et_vnd_re
        if k_vnd == 7:
            # print('stop')
            stop_vnd = True
    g += 1
    print(ET_penalty_POP_new[0])

